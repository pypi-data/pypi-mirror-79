# coding: utf-8

"""
    MailHog API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.message import Message  # noqa: E501
from openapi_client.rest import ApiException

class TestMessage(unittest.TestCase):
    """Message unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Message
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.message.Message()  # noqa: E501
        if include_optional :
            return Message(
                id = '0', 
                _from = openapi_client.models.path.Path(
                    relays = [
                        '0'
                        ], 
                    mailbox = '0', 
                    domain = '0', 
                    params = '0', ), 
                to = [
                    openapi_client.models.path.Path(
                        relays = [
                            '0'
                            ], 
                        mailbox = '0', 
                        domain = '0', 
                        params = '0', )
                    ], 
                # headers = openapi_client.models.headers.headers(), 
                size = 1.337, 
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else :
            return Message(
        )

    def testMessage(self):
        """Test Message"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
