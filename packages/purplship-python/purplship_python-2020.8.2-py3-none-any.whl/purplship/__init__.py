# coding: utf-8

# flake8: noqa

"""
    Purplship Open Source Multi-carrier Shipping API

     Purplship is an open source multi-carrier shipping API that simplifies the integration of logistic carrier services  The **proxy** endpoints are stateless and forwards calls to carriers web services.   # noqa: E501

    OpenAPI spec version: v1-2020.8.0
    Contact: hello@purplship.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

# import apis into sdk package
from purplship.api.addresses_api import AddressesApi
from purplship.api.carriers_api import CarriersApi
from purplship.api.customs_api import CustomsApi
from purplship.api.parcels_api import ParcelsApi
from purplship.api.rates_api import RatesApi
from purplship.api.shipments_api import ShipmentsApi
from purplship.api.shipping_api import ShippingApi
from purplship.api.tracking_api import TrackingApi
from purplship.api.utils_api import UtilsApi

# import ApiClient
from purplship.api_client import ApiClient
from purplship.configuration import Configuration
# import models into sdk package
from purplship.models.address import Address
from purplship.models.address_data import AddressData
from purplship.models.card import Card
from purplship.models.carrier_settings import CarrierSettings
from purplship.models.charge import Charge
from purplship.models.commodity import Commodity
from purplship.models.customs import Customs
from purplship.models.customs_data import CustomsData
from purplship.models.doc import Doc
from purplship.models.error_response import ErrorResponse
from purplship.models.invoice import Invoice
from purplship.models.label_printing_request import LabelPrintingRequest
from purplship.models.message import Message
from purplship.models.parcel import Parcel
from purplship.models.parcel_data import ParcelData
from purplship.models.payment import Payment
from purplship.models.payment_data import PaymentData
from purplship.models.rate import Rate
from purplship.models.rate_request import RateRequest
from purplship.models.rate_response import RateResponse
from purplship.models.references import References
from purplship.models.shipment import Shipment
from purplship.models.shipment_data import ShipmentData
from purplship.models.shipment_purchase_data import ShipmentPurchaseData
from purplship.models.shipment_response import ShipmentResponse
from purplship.models.shipping_request import ShippingRequest
from purplship.models.tracking_details import TrackingDetails
from purplship.models.tracking_event import TrackingEvent
from purplship.models.tracking_response import TrackingResponse


api_key = None
api_key_prefix = 'Token'
host = None
api_client = None

configuration = Configuration()


def init_client():
    global api_client
    if (api_client is not None) and (host == configuration.host) and (api_key == configuration.api_key['Authorization']):
        return api_client

    configuration.host = host
    configuration.api_key['Authorization'] = f'{api_key_prefix} {api_key}'
    api_client = ApiClient(configuration)
    return api_client


class Addresses:

    @staticmethod
    def create(*args, **kwargs):
        return AddressesApi(init_client()).create(*args, **kwargs)

    @staticmethod
    def list(*args, **kwargs):
        return AddressesApi(init_client()).list(*args, **kwargs)

    @staticmethod
    def retrieve(*args, **kwargs):
        return AddressesApi(init_client()).retrieve(*args, **kwargs)

    @staticmethod
    def update(*args, **kwargs):
        return AddressesApi(init_client()).update(*args, **kwargs)


class Carriers:

    @staticmethod
    def list(*args, **kwargs):
        return CarriersApi(init_client()).list(*args, **kwargs)

    @staticmethod
    def retrieve(*args, **kwargs):
        return CarriersApi(init_client()).retrieve(*args, **kwargs)


class Customs:

    @staticmethod
    def create(*args, **kwargs):
        return CustomsApi(init_client()).create(*args, **kwargs)

    @staticmethod
    def list(*args, **kwargs):
        return CustomsApi(init_client()).list(*args, **kwargs)

    @staticmethod
    def retrieve(*args, **kwargs):
        return CustomsApi(init_client()).retrieve(*args, **kwargs)

    @staticmethod
    def update(*args, **kwargs):
        return CustomsApi(init_client()).update(*args, **kwargs)


class Parcels:

    @staticmethod
    def create(*args, **kwargs):
        return ParcelsApi(init_client()).create(*args, **kwargs)

    @staticmethod
    def list(*args, **kwargs):
        return ParcelsApi(init_client()).list(*args, **kwargs)

    @staticmethod
    def retrieve(*args, **kwargs):
        return ParcelsApi(init_client()).retrieve(*args, **kwargs)

    @staticmethod
    def update(*args, **kwargs):
        return ParcelsApi(init_client()).update(*args, **kwargs)


class Rates:

    @staticmethod
    def fetch(*args, **kwargs):
        return RatesApi(init_client()).fetch(*args, **kwargs)


class Shipments:

    @staticmethod
    def create(*args, **kwargs):
        return ShipmentsApi(init_client()).create(*args, **kwargs)

    @staticmethod
    def list(*args, **kwargs):
        return ShipmentsApi(init_client()).list(*args, **kwargs)

    @staticmethod
    def retrieve(*args, **kwargs):
        return ShipmentsApi(init_client()).retrieve(*args, **kwargs)

    @staticmethod
    def rates(*args, **kwargs):
        return ShipmentsApi(init_client()).rates(*args, **kwargs)

    @staticmethod
    def options(*args, **kwargs):
        return ShipmentsApi(init_client()).options(*args, **kwargs)

    @staticmethod
    def purchase(*args, **kwargs):
        return ShipmentsApi(init_client()).purchase(*args, **kwargs)

    @staticmethod
    def track(*args, **kwargs):
        return ShipmentsApi(init_client()).track(*args, **kwargs)


class Shipping:

    @staticmethod
    def buy_label(*args, **kwargs):
        return ShippingApi(init_client()).buy_label(*args, **kwargs)


class Tracking:

    @staticmethod
    def fetch(*args, **kwargs):
        return TrackingApi(init_client()).fetch(*args, **kwargs)


class Utils:

    @staticmethod
    def references(*args, **kwargs):
        return UtilsApi(init_client()).references(*args, **kwargs)

    @staticmethod
    def print_label(*args, **kwargs):
        return UtilsApi(init_client()).print_label(*args, **kwargs)
