# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['dehyphen']

package_data = \
{'': ['*']}

install_requires = \
['clean-text[gpl]', 'flair']

setup_kwargs = {
    'name': 'dehyphen',
    'version': '0.3.3',
    'description': 'Dehyphenation of broken text (mainly German), i.e., extracted from a PDF',
    'long_description': '# `dehyphen` [![PyPI](https://img.shields.io/pypi/v/dehyphen.svg)](https://pypi.org/project/dehyphen/) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dehyphen.svg)](https://pypi.org/project/dehyphen/) [![PyPI - Downloads](https://img.shields.io/pypi/dm/dehyphen)](https://pypistats.org/packages/dehyphen)\n\n*Experimental, use with care.*\n\nPython package for **dehyphenation of broken text**, i.e., extracted from a PDF. Mainly for the German but works for other languages as well.\n\n`dehyphen` tries to reconstruct the original continuous text by choosing the most probably way to join lines or paragraphs (and remove hyphens).\nSeveral options are getting scored by calculating the [perplexity](https://en.wikipedia.org/wiki/Perplexity#Perplexity_per_word) of text, using [Flair](https://github.com/flairNLP/flair)\'s character-based [language models](https://machinelearningmastery.com/statistical-language-modeling-and-neural-language-models/).\nBased on these scores, the best fitting option is taken to guess the original text.\n\nCheck out the PDF text extraction pipeline [pd3f](https://github.com/pd3f/pd3f) that uses `dehypen` internally.\n\n\n## An Example\n\nFor this input\n\n> die Bedeutung der finan-\n>\n> ziellen Interessen der Union\n\n`dehyphen` joines the lines and removes the \'-\'.\n\n> die Bedeutung der **finanziellen** Interessen der Union\n\nBut in this example\n\n> Auch andere EU-\n>\n> Staaten, wie bspw. Polen,\n\nthe lines are also joined bu the hyphen is kept (becaus it\'s part of the word).\n\n> Auch andere **EU-Staaten**, wie bspw. Polen,\n\n\n## Installation\n\n```bash\npip install dehyphen\n```\n\nor\n\n```bash\npoetry add dehyphen\n```\n\n## Usage\n\n```python\nfrom dehyphen import FlairScorer\n\nscorer = FlairScorer(lang="de")\n```\n\nYou need to set `lang` to `de` for German, `en` for English, `es` for Spanish, etc. Otherwise, a multi-language-model will be chosen as the default. [See this section in the source code for more models](https://github.com/flairNLP/flair/blob/8c09e62d9a5a3c227b9ca0fb9f214de9620d4ca0/flair/embeddings/token.py#L431) (but omit the "-backwards" and "-forwards" as specified by Flair). [Some are described here](https://github.com/flairNLP/flair/blob/master/resources/docs/embeddings/FLAIR_EMBEDDINGS.md) and [there is another repo with some more models](https://github.com/flairNLP/flair-lms).\n\nTo speed up computations, choose a `-fast` language model from Flair. However, there are currently only a few.\nThere is for instance a multi-language one named `multi-v0` that contains English, German, French and others.\nUnfortunately, there is no fast German-only model right now.\n\nUsing CUDA (with a GPU) dramatically improves performance.\n\n### 1. remove hyphens from the end of a line (within paragraphs)\n\n```python\n# returns cleaned paragraph\nscorer.dehyphen(special_format)\n```\n\nThe input text has to be in a special format. Paragraphs should be seperated by two newlines characters (`\\n\\n`). Line should be end with a single newline `\\n`. Several helper functions exists to transform the data into the required format.\n\n### 2. join paragraphs, e.g., to reverse a page break\n\n```python\n# returns the joined paragraphs if the language model thinks there were split, otherwise `None`\nscorer.is_split_paragraph(paragraph_1, paragraph_2)\n```\n\n## Example\n\n```python\nfrom dehyphen import FlairScorer\n\nscorer = FlairScorer(lang="de")\n\nsome_german_text = """Zwar wird durch die Einführung eines eigenen Strafgesetzes die Bedeutung der finan-\nziellen Interessen der Union gewiss unterstrichen, dennoch erscheint die Aufspaltung\ndes strafrechtlichen Vermögensschutzes zweifelhaft, insbesondere soweit es densel-\nben Schutzgegenstand, nämlich die vermögensrelevanten Interessen der Union be-\ntrifft. Zum einen wird es den Normunterworfenen ohne Not erschwert, die zu befolgen-\nden Strafgesetze zu erfassen. Zum anderen ergeben sich potentielle Auslegungsdif-\n\nferenzen durch die Verwendung teilweise abweichender Terminologie (finanzielle In-\nteressen vs. Vermögen). Schließlich wird der Schutz besagter Interessen ohnedies\nbislang innerhalb des StGB gewährleistet. Daher empfiehlt es sich u.E., sämtliche Re-\ngelungen des RegE in das StGB zu integrieren, soweit entsprechende Neuregelungen\nüberhaupt erforderlich sind. Hierdurch wird sich auch eine klarere Trennung von Straf-\nrecht und Verwaltungsrecht erreichen lassen.\n\nDas Erfolgsverständnis entspricht daher eher dem wesentlich weiteren Betrugsbegriff\nbspw. des US-amerikanischen Rechts (Federal Law bspw. Fraud, Defraud, Wire-\nFraud, Bank-Fraud, 18.U.S.C. §1341 ff.(2016)) , die teilweise auch ganz auf einen\nSchaden verzichten. Fraud erfasst auch viele untreue- und unterschlagungsähnliche\nVerhaltensweisen sowie betrügerische Verfügungen als solche. Auch andere EU-\nStaaten, wie bspw. Polen, liegen im Hinblick auf den Erfolg näher bei der Richtlinie\nals bei der deutschen Schadensdogmatik.\n"""\n\nspecial_format = text_to_format(some_german_text)\nfixed_hyphens = scorer.dehyphen(special_format)\n\n# checks if two paragraphs can be joined, useful to, e.g., reverse page breaks.\njoined_paragraph = scorer.is_split_paragraph(fixed_hyphens[:2])\n\nprint(joined_paragraph)\n```\n**Output text**:\n\nZwar wird durch die Einführung eines eigenen Strafgesetzes die Bedeutung der finanziellen Interessen der Union gewiss unterstrichen, dennoch erscheint die Aufspaltung des strafrechtlichen Vermögensschutzes zweifelhaft, insbesondere soweit es denselben Schutzgegenstand, nämlich die vermögensrelevanten Interessen der Union betrifft. Zum einen wird es den Norm unterworfenen ohne Not erschwert, die zubefolgenden Strafgesetze zu erfassen. Zum anderen ergeben sich potentielle **Auslegungsdifferenzen** durch die Verwendung teilweise abweichender Terminologie (finanzielle Interessen vs. Vermögen). Schließlich wird der Schutz besagter Interessen ohnediesbislang innerhalb des StGB gewährleistet. Daher empfiehlt es sich u.E., sämtliche Regelungen des RegE in das StGB zu integrieren, soweit entsprechende Neuregelungenüberhaupt erforderlich sind. Hierdurch wird sich auch eine klarere Trennung von Strafrecht und Verwaltungsrecht erreichen lassen.\n\n*Hyphens are removed, paragraphs are joined along the word **Auslegungsdifferenzen**.*\n\n```python\nprint(fixed_hyphens[-1])\n```\n**Output text**:\n\nDas Erfolgsverständnis entspricht daher eher dem wesentlich weiteren Betrugsbegriff bspw. des US-amerikanischen Rechts (Federal Law bspw. Fraud, Defraud, **Wire-Fraud**, Bank-Fraud, 18.U.S.C. §1341 ff.(2016)), die teilweise auch ganz auf einen Schaden verzichten. Fraud erfasst auch viele untreue- und unterschlagungsähnliche Verhaltensweisen sowie betrügerische Verfügungen als solche. Auch andere **EU-Staaten**, wie bspw. Polen, liegen im Hinblick auf den Erfolg näher bei der Richtlinie als bei der deutschen Schadensdogmatik und Verwaltungsrecht erreichen lassen.\n\n***EU-Staaten** & **Wire-Fraud** are not dehyphenized.*\n\n\n## License\n\nGPLv3',
    'author': 'Johannes Filter',
    'author_email': 'hi@jfilter.de',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/pd3f/dehyphen',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6',
}


setup(**setup_kwargs)
