[AUTH]
AUTH_KEY = '__uliweb_session_user_id__'
USER_GROUP_TYPE = [('D', _('Department')), ('G', _('Group'))]

#refer to uliweb.ocntrib.auth.authenciate
AUTH_DEFAULT_TYPE = 'default'
#share user session according user_id in difference host via same cache server
#if AUTH_USER_SHARE is True, it'll save (userid, session_id) to cache
AUTH_SHARE_USER_SESSION = False
#which column name will be used to find user object
GET_AUTH_USER_FIELDNAME = 'id'

[AUTH_CONFIG]
default = {
        'title':'Default Authentication',
        'authenticate':'uliweb.contrib.auth.default_authenticate'}

[MIDDLEWARES]
auth = 'uliweb.contrib.auth.middle_auth.AuthMiddle', 100

[MODELS]
user = 'uliweb.contrib.auth.models.User'
usergroup = 'uliweb.contrib.auth.models.UserGroup'

[EXPOSES]
login = '/login', 'uliweb.contrib.auth.views.login'
logout = '/logout', 'uliweb.contrib.auth.views.logout'

[FUNCTIONS]
require_login = '#{appname}.require_login'
encrypt_password = '#{appname}.encrypt_password'
check_password = '#{appname}.check_password'
authenticate = '#{appname}.authenticate'
get_auth_user = '#{appname}.get_auth_user'
update_user_session_expiry_time = '#{appname}.update_user_session_expiry_time'
set_user_session = '#{appname}.set_user_session'

[DECORATORS]
require_login = 'uliweb.contrib.auth.require_login'

[FORMS]
auth.LoginForm = 'uliweb.contrib.auth.forms.LoginForm'
auth.RegisterForm = 'uliweb.contrib.auth.forms.RegisterForm'
auth.ChangePasswordForm = 'uliweb.contrib.auth.forms.ChangePasswordForm'

[LOG.Loggers]
uliweb.contrib.auth = {'format': "[%(levelname)s %(name)s %(asctime)-15s] %(message)s",'level':'info'}
