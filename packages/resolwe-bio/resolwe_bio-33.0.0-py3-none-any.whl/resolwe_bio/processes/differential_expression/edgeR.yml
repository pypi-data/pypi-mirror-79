# ======
# edgeR
# ======
---

- slug: differentialexpression-edger
  name: edgeR
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:4.9.0
  data_name: 'Differential expression (case vs. control)'
  version: 1.2.0
  type: data:differentialexpression:edger
  category: Differential Expression
  persistence: CACHED
  description: |
    Empirical Analysis of Digital Gene Expression Data in R (edgeR).
    Differential expression analysis of RNA-seq expression profiles with
    biological replication. Implements a range of statistical methodology
    based on the negative binomial distributions, including empirical Bayes
    estimation, exact tests, generalized linear models and quasi-likelihood
    tests. As well as RNA-seq, it be applied to differential signal analysis
    of other types of genomic data that produce counts, including ChIP-seq,
    Bisulfite-seq, SAGE and CAGE. See
    [here](https://www.bioconductor.org/packages/devel/bioc/vignettes/edgeR/inst/doc/edgeRUsersGuide.pdf)
    for more information.
  input:
    - name: case
      label: Case
      type: list:data:expression
      description: |
        Case samples (replicates)
    - name: control
      label: Control
      type: list:data:expression
      description: |
        Control samples (replicates)
    - name: filter
      label: Raw counts filtering threshold
      type: basic:integer
      default: 10
      description: |
        Filter genes in the expression matrix input. Remove genes where the
        number of counts in all samples is below the threshold.
  output:
    - name: raw
      label: Differential expression
      type: basic:file
    - name: de_json
      label: Results table (JSON)
      type: basic:json
    - name: de_file
      label: Results table (file)
      type: basic:file
    - name: source
      label: Gene ID database
      type: basic:string
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
    - name: feature_type
      label: Feature type
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      controls=()
      cases=()
      sample_conditions=()

      {% if control|length < 2 or case|length < 2 %}
        re-error "Error in calculating edgeR dispersion, please provide more samples"
      {% endif %}

      {% for c in control %}
        {% if not c.rc.file %}
          re-error "Read counts are required when using edgeR"
        {% endif %}
        controls+=({{c.rc.file}})
        sample_conditions+=('control')
      {% endfor %}

      {% for t in case %}
        {% if not t.rc.file %}
          re-error "Read counts are required when using edgeR"
        {% endif %}
        {% if t not in control %}
          cases+=({{t.rc.file}})
          sample_conditions+=('case')
        {% else %}
          re-warning "DE analysis failed. Case and Control groups must contain unique samples."
          re-error " Sample {{ t|sample_name }} is in both Case and Control group."
        {% endif %}
      {% endfor %}

      {% set expressions = case + control %}

      {% for e in expressions %}

        {% if e.source != (expressions|first).source %}
          re-warning "All samples must be annotated by the same genome database."
          re-error "Sample {{ e|sample_name }} has {{ e.source }} gene IDs, while {{ (expressions|first)|name }} has {{ (expressions|first).source }} gene IDs."
        {% endif %}

        {% if e.species != (expressions|first).species %}
          re-warning "All samples must be the same species."
          re-error "Sample {{ e|sample_name }} is {{ e.species }}, while {{ (expressions|first)|name }} is a(n) {{ (expressions|first).species }}."
        {% endif %}

        {% if e.build != (expressions|first).build %}
          re-warning "All samples must share the same genome build information."
          re-error "Sample {{ e|sample_name }} has {{ e.build }}, while {{ (expressions|first)|name }} has {{ (expressions|first).build }} build information."
        {% endif %}

        {% if e.feature_type != (expressions|first).feature_type %}
          re-warning "DE analysis must be created using the expression data of the same feature type (gene, transcript, etc.)."
          re-error "Sample {{ expressions|first|sample_name }} has {{ (expressions|first).feature_type }}, while {{ e|sample_name }} has {{ e.feature_type }} feature type."
        {% endif %}

      {% endfor %}

      sample_files=("${controls[@]}" "${cases[@]}")

      re-progress 0.1

      expressionmerge.py \
        "${sample_files[@]}" \
        --experiments "${sample_files[@]}" \
        --intersection \
        --out counts.tab
      re-checkrc "Error merging read counts."

      diffexp_filtering.R \
        -counts counts.tab \
        -filter {{filter}} \
        -out counts_filtered.tab

      run_edger.R \
        counts_filtered.tab \
        --sampleConditions "${sample_conditions[@]}"
      re-checkrc "Error computing differential expression (edgeR)."

      re-progress 0.95

      parse_diffexp.py \
        diffexp_edgeR.tab \
        de_data.json \
        de_file.tab.gz \
        --gene_id gene_id \
        --fdr FDR \
        --pvalue PValue \
        --logfc logFC

      gzip diffexp_edgeR.tab

      re-save de_json de_data.json
      re-save-file raw diffexp_edgeR.tab.gz
      re-save-file de_file de_file.tab.gz
      re-save source {{ (case|first).source }}
      re-save species {{ (case|first).species }}
      re-save build {{ (case|first).build }}
      re-save feature_type {{ (case|first).feature_type }}
