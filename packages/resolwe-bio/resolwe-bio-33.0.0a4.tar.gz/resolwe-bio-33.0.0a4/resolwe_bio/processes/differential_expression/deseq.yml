# ===============================
# Differential Expression - DESeq
# ===============================
---

- slug: differentialexpression-deseq2
  name: DESeq2
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/rnaseq:4.9.0
  data_name: 'Differential expression (case vs. control)'
  version: 2.7.0
  type: data:differentialexpression:deseq2
  category: Differential Expression
  persistence: CACHED
  description: |
    The DESeq2 package estimates variance-mean dependence in count data from
    high-throughput sequencing assays and tests for differential expression
    based on a model using the negative binomial distribution. See
    [here](https://www.bioconductor.org/packages/release/bioc/manuals/DESeq2/man/DESeq2.pdf)
    and [here](http://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html)
    for more information.
  input:
    - name: case
      label: Case
      type: list:data:expression
      description: |
        Case samples (replicates)
    - name: control
      label: Control
      type: list:data:expression
      description: |
        Control samples (replicates)
    - name: options
      label: Differential expression analysis options
      group:
        - name: beta_prior
          label: Beta prior
          type: basic:boolean
          default: false
          description: |
            Whether or not to put a zero-mean normal prior on the non-intercept coefficients.
    - name: filter
      label: Gene filtering options
      group:
        - name: count
          label: Filter genes based on expression count
          type: basic:boolean
          default: true
        - name: min_count_sum
          label: Minimum raw gene expression count summed over all samples
          type: basic:integer
          default: 10
          description: |
            Filter genes in the expression matrix input. Remove genes where the
            expression count sum over all samples is below the threshold.
          hidden: '!filter.count'
        - name: cook
          label: Filter genes based on Cook's distance
          type: basic:boolean
          default: false
        - name: cooks_cutoff
          label: Threshold on Cook's distance
          type: basic:decimal
          required: false
          hidden: '!filter.cook'
          description: |
            If one or more samples have Cook's distance larger than the threshold set here, the
            p-value for the row is set to NA. If left empty, the default threshold of 0.99 quantile
            of the F(p, m-p) distribution is used, where p is the number of coefficients being
            fitted and m is the number of samples. This test excludes Cook's distance of samples
            belonging to experimental groups with only two samples.
        - name: independent
          label: Apply independent gene filtering
          type: basic:boolean
          default: false
        - name: alpha
          label: Significance cut-off used for optimizing independent gene filtering
          type: basic:decimal
          default: 0.1
          hidden: '!filter.independent'
          description: The value should be set to adjusted p-value cut-off (FDR).
  output:
    - name: raw
      label: Differential expression
      type: basic:file
    - name: de_json
      label: Results table (JSON)
      type: basic:json
    - name: de_file
      label: Results table (file)
      type: basic:file
    - name: count_matrix
      label: Count matrix
      type: basic:file
    - name: source
      label: Gene ID database
      type: basic:string
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
    - name: feature_type
      label: Feature type
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      {% set expressions = case + control %}
      {% set rsem = expressions|type|subtype('data:expression:rsem:')|all %}
      {% set salmon = expressions|type|subtype('data:expression:salmon:')|all %}
      {% set nanostring = expressions|type|subtype('data:expression:nanostring:')|all %}

      {% if not rsem and not salmon and not nanostring and not expressions|map(attribute='rc.file')|all %}
        re-error "Read counts are required when using DESeq2."
      {% endif %}

      {% for e in expressions %}

        {% if e.source != (expressions|first).source %}
          re-warning "All samples must be annotated by the same genome database."
          re-error "Sample {{ e|sample_name }} has {{ e.source }} gene IDs, while {{ (expressions|first)|name }} has {{ (expressions|first).source }} gene IDs."
        {% endif %}

        {% if e.species != (expressions|first).species %}
          re-warning "All samples must be the same species."
          re-error "Sample {{ e|sample_name }} is {{ e.species }}, while {{ (expressions|first)|name }} is a(n) {{ (expressions|first).species }}."
        {% endif %}

        {% if e.build != (expressions|first).build %}
          re-warning "All samples must share the same genome build information."
          re-error "Sample {{ e|sample_name }} has {{ e.build }}, while {{ (expressions|first)|name }} has {{ (expressions|first).build }} build information."
        {% endif %}

        {% if e.feature_type != (expressions|first).feature_type %}
          re-warning "DE analysis must be created using the expression data of the same feature type (gene, transcript, etc.)."
          re-error "Sample {{ expressions|first|sample_name }} has {{ (expressions|first).feature_type }}, while {{ e|sample_name }} has {{ e.feature_type }} feature type."
        {% endif %}

      {% endfor %}

      {% for t in case %}
        {% if t in control %}
          re-warning "DE analysis failed. Case and Control groups must contain unique samples."
          re-error " Sample {{ t|sample_name }} is in both Case and Control group."
        {% endif %}
      {% endfor %}

      re-progress 0.1

      deseq.R \
        --cases {% for c in case %} {{ c.genes.file if rsem else c.quant.file if salmon else c.exp.file if nanostring else c.rc.file }} {% endfor %} \
        --controls {% for c in control %} {{ c.genes.file if rsem else c.quant.file if salmon else c.exp.file if nanostring else c.rc.file }} {% endfor %} \
        {% if options.beta_prior %} --beta-prior {% endif %} \
        {% if filter.count %} --min-count-sum {{ filter.min_count_sum }} {% endif %} \
        {% if filter.cook and filter.cooks_cutoff is defined %} --cooks-cutoff {{ filter.cooks_cutoff }} {% endif %} \
        {% if filter.independent %} --alpha {{ filter.alpha }} {% endif %} \
        {% if rsem %} --format rsem {% endif %} \
        {% if salmon %} --format salmon --tx2gene {{case.0.txdb.file}} {% endif %} \
        {% if nanostring %} --format nanostring {% endif %}
      re-checkrc "Error computing differential expression (DESeq2)."

      re-progress 0.95

      parse_diffexp.py \
        diffexp_deseq2.tab \
        de_data.json \
        de_file.tab.gz \
        --gene_id gene_id \
        --fdr padj \
        --pvalue pvalue \
        --logfc log2FoldChange \
        --stat stat

      gzip diffexp_deseq2.tab
      gzip count_matrix.tab

      re-save de_json de_data.json
      re-save-file raw diffexp_deseq2.tab.gz
      re-save-file de_file de_file.tab.gz
      re-save-file count_matrix count_matrix.tab.gz
      re-save source {{ (case|first).source }}
      re-save species {{ (case|first).species }}
      re-save build {{ (case|first).build }}
      re-save feature_type {{ (case|first).feature_type }}
