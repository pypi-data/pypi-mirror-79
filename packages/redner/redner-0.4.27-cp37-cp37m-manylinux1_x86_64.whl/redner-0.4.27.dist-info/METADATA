Metadata-Version: 2.1
Name: redner
Version: 0.4.27
Summary: Differentiable rendering without approximation.
Home-page: https://github.com/BachiLi/redner
Author: Tzu-Mao Li
Author-email: tzumao@mit.edu
License: MIT
Keywords: rendering,Monte Carlo ray tracing,computer vision,computer graphics,differentiable rendering,PyTorch,TensorFlow
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX :: Linux
Classifier: Topic :: Multimedia :: Graphics :: 3D Rendering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Scientific/Engineering :: Image Recognition
Requires-Dist: scikit-image
Requires-Dist: imageio

redner is a differentiable renderer that can take the
derivatives of rendering output with respect to arbitrary
scene parameters, that is, you can backpropagate from the
image to your 3D scene. One of the major usages of redner
is inverse rendering (hence the name redner) through gradient
descent. What sets redner apart are: 1) it computes correct
rendering gradients stochastically without any approximation
and 2) it has a physically-based mode -- which means it can
simulate photons and produce realistic lighting phenomena,
such as shadow and global illumination, and it handles the
derivatives of these features correctly. You can also use
redner in a fast deferred rendering mode for local shading:
in this mode it still has correct gradient estimation and
more elaborate material models compared to most differentiable
renderers out there.


