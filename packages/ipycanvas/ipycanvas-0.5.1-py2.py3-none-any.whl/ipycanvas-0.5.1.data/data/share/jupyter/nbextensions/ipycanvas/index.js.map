{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/version.ts","webpack:///./src/extension.ts","webpack:///./src/index.ts","webpack:///./src/widget.ts","webpack:///external \"@jupyter-widgets/base\"","webpack:///./src/utils.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","data","MODULE_VERSION","version","MODULE_NAME","window","__webpack_public_path__","document","querySelector","getAttribute","getContext","canvas","context","CanvasModel","DOMWidgetModel","super","defaults","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","width","height","sync_image_data","image_data","attributes","options","initialize","this","createElement","ctx","resizeCanvas","drawImageData","on_some_change","on","syncImageData","onCommand","send","event","img","fromBytes","drawImage","trigger","command","buffers","processCommand","forEachView","view","updateCanvas","Array","remainingBuffers","subcommand","subbuffers","n_buffers","slice","drawRects","args","fillArc","strokeArc","drawArcs","putImageData","setAttr","attr","clearCanvas","executeCommand","commandName","x","getArg","y","numberRects","Math","min","length","idx","getItem","save","beginPath","closePath","fill","restore","stroke","radius","startAngle","endAngle","anticlockwise","numberArcs","arc","serializedImage","image","unpack_models","widget_manager","MultiCanvasModel","_drawImage","url","format","blob","Blob","type","URL","createObjectURL","TextDecoder","decode","buffer","Image","Promise","resolve","onload","src","undefined","bufferMetadata","dx","dy","shape","Uint8ClampedArray","imageData","ImageData","offscreenCanvas","clear","clearRect","callback","view_id","views","then","setAttribute","bytes","toBytes","set","save_changes","serializers","serialize","array","DataView","deserialize","dataview","CanvasView","DOMWidgetView","el","model","addEventListener","handleEvent","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","getCoordinates","touches","from","map","rect","getBoundingClientRect","clientX","left","clientY","top","_canvases","updateCanvasModels","canvasModel","canvasModels","__WEBPACK_EXTERNAL_MODULE__5__","Scalar","isScalar","Arg","ScalarArg","Infinity","BufferArg","metadata","dtype","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","getTypedArray","toBlob","reject","reader","FileReader","onloadend","result","readAsArrayBuffer"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// Entry point for the notebook bundle containing custom model definitions.\n//\n// Setup notebook base URL\n//\n// Some static assets may be required by the custom widget javascript. The base\n// url for the notebook is not known at build time and is therefore computed\n// dynamically.\n(window as any).__webpack_public_path__ = document.querySelector('body')!.getAttribute('data-base-url') + 'nbextensions/ipycanvas';\n\nexport * from './index';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './version';\nexport * from './widget';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  DOMWidgetModel, DOMWidgetView, ISerializers, Dict, unpack_models\n} from '@jupyter-widgets/base';\n\nimport {\n  MODULE_NAME, MODULE_VERSION\n} from './version';\n\nimport {\n  getArg, toBytes, fromBytes\n} from './utils';\n\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    throw 'Could not create 2d context.';\n  }\n  return context;\n}\n\nfunction serializeImageData(array: Uint8ClampedArray) {\n  return new DataView(array.buffer.slice(0));\n}\n\nfunction deserializeImageData(dataview: DataView | null) {\n  if (dataview === null) {\n    return null;\n  }\n\n  return new Uint8ClampedArray(dataview.buffer);\n}\n\n\nexport\nclass CanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: CanvasModel.model_name,\n      _model_module: CanvasModel.model_module,\n      _model_module_version: CanvasModel.model_module_version,\n      _view_name: CanvasModel.view_name,\n      _view_module: CanvasModel.view_module,\n      _view_module_version: CanvasModel.view_module_version,\n      width: 700,\n      height: 500,\n      sync_image_data: false,\n      image_data: null,\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    image_data: {\n      serialize: serializeImageData,\n      deserialize: deserializeImageData\n    }\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n    this.drawImageData();\n\n    this.on_some_change(['width', 'height'], this.resizeCanvas, this);\n    this.on('change:sync_image_data', this.syncImageData.bind(this));\n    this.on('msg:custom', this.onCommand.bind(this));\n\n    this.send({ event: 'client_ready' }, {});\n  }\n\n  private async drawImageData() {\n    if (this.get('image_data') !== null) {\n      const img = await fromBytes(this.get('image_data'));\n\n      this.ctx.drawImage(img, 0, 0);\n\n      this.trigger('new-frame');\n    }\n  }\n\n  private async onCommand(command: any, buffers: any) {\n    await this.processCommand(command, buffers);\n\n    this.forEachView((view: CanvasView) => {\n      view.updateCanvas();\n    });\n\n    this.trigger('new-frame');\n    this.syncImageData();\n  }\n\n  private async processCommand(command: any, buffers: any) {\n    if (command instanceof Array) {\n      let remainingBuffers = buffers;\n\n      for (const subcommand of command) {\n        let subbuffers = [];\n        if (subcommand.n_buffers) {\n          subbuffers = remainingBuffers.slice(0, subcommand.n_buffers);\n          remainingBuffers = remainingBuffers.slice(subcommand.n_buffers)\n        }\n        await this.processCommand(subcommand, subbuffers);\n      }\n      return;\n    }\n\n    switch (command.name) {\n      case 'fillRects':\n        this.drawRects(command.args, buffers, 'fillRect');\n        break;\n      case 'strokeRects':\n        this.drawRects(command.args, buffers, 'strokeRect');\n        break;\n      case 'fillArc':\n        this.fillArc(command.args, buffers);\n        break;\n      case 'strokeArc':\n        this.strokeArc(command.args, buffers);\n        break;\n      case 'fillArcs':\n        this.drawArcs(command.args, buffers, 'fill');\n        break;\n      case 'strokeArcs':\n        this.drawArcs(command.args, buffers, 'stroke');\n        break;\n      case 'drawImage':\n        await this.drawImage(command.args, buffers);\n        break;\n      case 'putImageData':\n        this.putImageData(command.args, buffers);\n        break;\n      case 'set':\n        this.setAttr(command.attr, command.value);\n        break;\n      case 'clear':\n        this.clearCanvas();\n        break;\n      default:\n        this.executeCommand(command.name, command.args);\n        break;\n    }\n  }\n\n  private drawRects(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const width = getArg(args[2], buffers);\n    const height = getArg(args[3], buffers);\n\n    const numberRects = Math.min(x.length, y.length, width.length, height.length);\n\n    for (let idx = 0; idx < numberRects; ++idx) {\n      this.executeCommand(commandName, [x.getItem(idx), y.getItem(idx), width.getItem(idx), height.getItem(idx)]);\n    }\n  }\n\n  private fillArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.fill();\n    this.ctx.restore();\n  }\n\n  private strokeArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  private drawArcs(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const radius = getArg(args[2], buffers);\n    const startAngle = getArg(args[3], buffers);\n    const endAngle = getArg(args[4], buffers);\n    const anticlockwise = getArg(args[5], buffers);\n\n    const numberArcs = Math.min(\n      x.length, y.length, radius.length,\n      startAngle.length, endAngle.length\n    );\n\n    this.ctx.save();\n\n    for (let idx = 0; idx < numberArcs; ++idx) {\n      this.ctx.beginPath();\n      this.ctx.arc(\n        x.getItem(idx), y.getItem(idx), radius.getItem(idx),\n        startAngle.getItem(idx), endAngle.getItem(idx),\n        anticlockwise.getItem(idx)\n      );\n      this.ctx.closePath();\n\n      this.executeCommand(commandName);\n    }\n\n    this.ctx.restore();\n  }\n\n  private async drawImage(args: any[], buffers: any) {\n    const [serializedImage, x, y, width, height] = args;\n\n    const image = await unpack_models(serializedImage, this.widget_manager);\n\n    if (image instanceof CanvasModel || image instanceof MultiCanvasModel) {\n      this._drawImage(image.canvas, x, y, width, height);\n      return;\n    }\n\n    if (image.get('_model_name') == 'ImageModel') {\n      // Create the image manually instead of creating an ImageView\n      let url: string;\n      const format = image.get('format');\n      const value = image.get('value');\n      if (format !== 'url') {\n          const blob = new Blob([value], {type: `image/${format}`});\n          url = URL.createObjectURL(blob);\n      } else {\n          url = (new TextDecoder('utf-8')).decode(value.buffer);\n      }\n\n      const img = new Image();\n      return new Promise((resolve) => {\n        img.onload = () => {\n          this._drawImage(img, x, y, width, height);\n          resolve();\n        };\n        img.src = url;\n      });\n    }\n  }\n\n  private _drawImage(image: HTMLCanvasElement | HTMLImageElement,\n                     x: number, y: number,\n                     width: number | undefined, height: number | undefined) {\n    if (width === undefined || height === undefined) {\n      this.ctx.drawImage(image, x, y);\n    } else {\n      this.ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  private putImageData(args: any[], buffers: any) {\n    const [bufferMetadata, dx, dy] = args;\n\n    const width = bufferMetadata.shape[1];\n    const height = bufferMetadata.shape[0];\n\n    const data = new Uint8ClampedArray(buffers[0].buffer);\n    const imageData = new ImageData(data, width, height);\n\n    // Draw on a temporary off-screen canvas. This is a workaround for `putImageData` to support transparency.\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = width;\n    offscreenCanvas.height = height;\n    getContext(offscreenCanvas).putImageData(imageData, 0, 0);\n\n    this.ctx.drawImage(offscreenCanvas, dx, dy);\n  }\n\n  private setAttr(attr: string, value: any) {\n    (this.ctx as any)[attr] = value;\n  }\n\n  private clearCanvas() {\n    this.forEachView((view: CanvasView) => {\n      view.clear();\n    });\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  private executeCommand(name: string, args: any[] = []) {\n    (this.ctx as any)[name](...args);\n  }\n\n  private forEachView(callback: (view: CanvasView) => void) {\n    for (const view_id in this.views) {\n      this.views[view_id].then((view: CanvasView) => {\n        callback(view);\n      });\n    }\n  }\n\n  private resizeCanvas() {\n    this.canvas.setAttribute('width', this.get('width'));\n    this.canvas.setAttribute('height', this.get('height'));\n  }\n\n  private async syncImageData() {\n    if (!this.get('sync_image_data')) {\n      return;\n    }\n\n    const bytes = await toBytes(this.canvas);\n\n    this.set('image_data', bytes);\n    this.save_changes();\n  }\n\n  static model_name = 'CanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'CanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  views: Dict<Promise<CanvasView>>;\n}\n\n\nexport\nclass CanvasView extends DOMWidgetView {\n  render() {\n    this.ctx = getContext(this.el);\n\n    this.resizeCanvas();\n    this.model.on_some_change(['width', 'height'], this.resizeCanvas, this);\n\n    this.el.addEventListener('mousemove', { handleEvent: this.onMouseMove.bind(this) });\n    this.el.addEventListener('mousedown', { handleEvent: this.onMouseDown.bind(this) });\n    this.el.addEventListener('mouseup', { handleEvent: this.onMouseUp.bind(this) });\n    this.el.addEventListener('mouseout', { handleEvent: this.onMouseOut.bind(this) });\n    this.el.addEventListener('touchstart', { handleEvent: this.onTouchStart.bind(this) });\n    this.el.addEventListener('touchend', { handleEvent: this.onTouchEnd.bind(this) });\n    this.el.addEventListener('touchmove', { handleEvent: this.onTouchMove.bind(this) });\n    this.el.addEventListener('touchcancel', { handleEvent: this.onTouchCancel.bind(this) });\n\n    this.updateCanvas();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.el.width, this.el.height);\n  }\n\n  updateCanvas() {\n    this.clear();\n    this.ctx.drawImage(this.model.canvas, 0, 0);\n  }\n\n  protected resizeCanvas() {\n    this.el.setAttribute('width', this.model.get('width'));\n    this.el.setAttribute('height', this.model.get('height'));\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    this.model.send({ event: 'mouse_move', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    this.model.send({ event: 'mouse_down', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseUp(event: MouseEvent) {\n    this.model.send({ event: 'mouse_up', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseOut(event: MouseEvent) {\n    this.model.send({ event: 'mouse_out', ...this.getCoordinates(event) }, {});\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_start', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchEnd(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_end', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchMove(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_move', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchCancel(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_cancel', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  protected getCoordinates(event: MouseEvent | Touch) {\n    const rect = this.el.getBoundingClientRect();\n\n    const x = this.el.width * (event.clientX - rect.left) / rect.width;\n    const y = this.el.height * (event.clientY - rect.top) / rect.height;\n\n    return { x, y };\n  }\n\n  get tagName(): string {\n    return 'canvas';\n  }\n\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  model: CanvasModel | MultiCanvasModel;\n}\n\n\nexport\nclass MultiCanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: MultiCanvasModel.model_name,\n      _model_module: MultiCanvasModel.model_module,\n      _model_module_version: MultiCanvasModel.model_module_version,\n      _view_name: MultiCanvasModel.view_name,\n      _view_module: MultiCanvasModel.view_module,\n      _view_module_version: MultiCanvasModel.view_module_version,\n      _canvases: [],\n      sync_image_data: false,\n      image_data: null,\n      width: 700,\n      height: 500,\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    _canvases: { deserialize: (unpack_models as any) },\n    image_data: { serialize: (bytes: Uint8ClampedArray) => {\n      return new DataView(bytes.buffer.slice(0));\n    }}\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n\n    this.on_some_change(['width', 'height'], this.resizeCanvas, this);\n    this.on('change:_canvases', this.updateCanvasModels.bind(this));\n    this.on('change:sync_image_data', this.syncImageData.bind(this));\n\n    this.updateCanvasModels();\n  }\n\n  get canvasModels(): CanvasModel[] {\n    return this.get('_canvases');\n  }\n\n  private updateCanvasModels() {\n    // TODO: Remove old listeners\n    for (const canvasModel of this.canvasModels) {\n      canvasModel.on('new-frame', this.updateCanvas, this);\n    }\n\n    this.updateCanvas();\n  }\n\n  private updateCanvas() {\n    this.ctx.clearRect(0, 0, this.get('width'), this.get('height'));\n\n    for (const canvasModel of this.canvasModels) {\n      this.ctx.drawImage(canvasModel.canvas, 0, 0);\n    }\n\n    this.forEachView((view: MultiCanvasView) => {\n      view.updateCanvas();\n    });\n\n    this.syncImageData();\n  }\n\n  private resizeCanvas() {\n    this.canvas.setAttribute('width', this.get('width'));\n    this.canvas.setAttribute('height', this.get('height'));\n  }\n\n  private async syncImageData() {\n    if (!this.get('sync_image_data')) {\n      return;\n    }\n\n    const bytes = await toBytes(this.canvas);\n\n    this.set('image_data', bytes);\n    this.save_changes();\n  }\n\n  private forEachView(callback: (view: MultiCanvasView) => void) {\n    for (const view_id in this.views) {\n      this.views[view_id].then((view: MultiCanvasView) => {\n        callback(view);\n      });\n    }\n  }\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  views: Dict<Promise<MultiCanvasView>>;\n\n  static model_name = 'MultiCanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'MultiCanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n}\n\n\nexport\nclass MultiCanvasView extends CanvasView {\n  model: MultiCanvasModel;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","function getTypedArray(dataview: any, metadata: any) {\n  switch (metadata.dtype) {\n    case 'int8':\n      return new Int8Array(dataview.buffer);\n      break;\n    case 'int16':\n      return new Int16Array(dataview.buffer);\n      break;\n    case 'int32':\n      return new Int32Array(dataview.buffer);\n      break;\n    case 'float32':\n      return new Float32Array(dataview.buffer);\n      break;\n    case 'float64':\n      return new Float64Array(dataview.buffer);\n      break;\n    default:\n      throw 'Unknown dtype ' + metadata.dtype;\n      break;\n  }\n}\n\n// Scalar type\ntype Scalar = null | boolean | number | string;\n\nnamespace Scalar {\n  export\n  function isScalar(x: any): x is Scalar {\n      return x === null || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\";\n  }\n}\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\n\n// Buffered argument\nexport\nabstract class Arg {\n  abstract getItem(idx: number) : any;\n\n  length: number;\n}\n\nclass ScalarArg extends Arg {\n  constructor(value: Scalar) {\n    super();\n\n    this.value = value;\n    this.length = Infinity;\n  }\n\n  getItem(idx: number) : any {\n    return this.value;\n  }\n\n  value: Scalar;\n}\n\nclass BufferArg extends Arg {\n  constructor(bufferMetadata: any, buffer: any[]) {\n    super();\n\n    this.value = getTypedArray(buffer, bufferMetadata);\n    this.length = this.value.length;\n  }\n\n  getItem(idx: number) : any {\n    return this.value[idx];\n  }\n\n  value: TypedArray;\n}\n\nexport\nfunction getArg(metadata: any, buffers: any) : Arg {\n  if (Scalar.isScalar(metadata)) {\n    return new ScalarArg(metadata);\n  }\n\n  if (metadata['idx'] !== undefined) {\n    return new BufferArg(metadata, buffers[metadata['idx']])\n  }\n\n  throw 'Could not process argument ' + metadata;\n}\n\nexport\nasync function toBlob(canvas: HTMLCanvasElement) : Promise<Blob> {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob == null) {\n        return reject('Unable to create blob');\n      }\n\n      resolve(blob);\n    });\n  });\n}\n\nexport\nasync function toBytes(canvas: HTMLCanvasElement) : Promise<Uint8ClampedArray> {\n  const blob = await toBlob(canvas);\n\n  return new Promise<Uint8ClampedArray>((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n        if (typeof reader.result == 'string' || reader.result == null) {\n          return reject('Unable to read blob');\n        }\n\n        const bytes = new Uint8ClampedArray(reader.result);\n        resolve(bytes);\n    };\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nexport\nasync function fromBytes(array: Uint8ClampedArray) : Promise<HTMLImageElement> {\n  const blob = new Blob([array]);\n\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const img = new Image();\n\n    img.onload = () => {\n      resolve(img);\n    }\n\n    img.src = URL.createObjectURL(blob);\n  });\n}\n"],"sourceRoot":""}