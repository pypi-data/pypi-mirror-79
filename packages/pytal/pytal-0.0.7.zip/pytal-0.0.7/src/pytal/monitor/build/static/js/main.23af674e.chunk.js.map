{"version":3,"sources":["chart.tsx","dataset/data.ts","utils.js","types/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["fitWidth","props","type","width","initialData","data","ratio","chartType","transactions","indicator","sameDateByChartType","d1","d2","isSameOrAfter","isBefore","add","isSame","sma20","sma","id","options","windowSize","merge","d","c","accessor","sma50","stroke","buySell","algo","accumulator","date","i","length","transaction","moment","amount","longShort","defaultAnnotationProps","fontFamily","fontSize","opacity","onClick","console","log","bind","longAnnotationProps","fill","text","y","yScale","datum","low","tooltip","shortAnnotationProps","high","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","height","margin","left","right","top","bottom","seriesName","yExtents","axisAt","orient","ticks","yAccessor","with","LabelAnnotation","when","usingProps","mockTransactions","uuid","price","value","symbol","parseData","parse","open","close","volume","timeParse","parseDateTime","getM5Data","a","dataset","fetch","then","response","csvParse","sort","b","valueOf","getM15Data","newData","forEach","item","minute","minutes","push","getH1Data","getH4Data","getTransactionData","Data","Chart","this","m1","m5","m15","h1","h4","w1","jsonArr","json","isSameOrBefore","err","Indicator","socket","io","App","useState","setData","Type","Progress","Log","Error","Loading","status","setStatus","useCallback","m5data","m15data","h1data","h4data","setChart","setTransaction","preStatus","useGetDataSet","getDataSet","undefined","playStatus","setPlayStatus","chartStatus","setChartStatus","useEffect","on","play","setInterval","preData","tgtChart","tgtdata","toDate","nextData","speed","ButtonGroup","color","aria-label","Button","IconButton","clearInterval","component","Typography","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.23af674e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment, { Moment } from 'moment'\n//@ts-ignore\nimport { scaleTime } from \"d3-scale\";\n//@ts-ignore\nimport { utcDay, utcMinute, utcHour } from \"d3-time\";\n//@ts-ignore\nimport { timeFormat } from \"d3-time-format\";\n//@ts-ignore\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\n//@ts-ignore\nimport { CandlestickSeries, LineSeries } from \"react-stockcharts/lib/series\";\n//@ts-ignore\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\n//@ts-ignore\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n//@ts-ignore\nimport { CurrentCoordinate } from \"react-stockcharts/lib/coordinates\";\n//@ts-ignore\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\n//@ts-ignore\nimport { LabelAnnotation, Label, Annotate } from \"react-stockcharts/lib/annotation\";\n//@ts-ignore\nimport { ema, wma, sma, tma } from \"react-stockcharts/lib/indicator\";\n//@ts-ignore\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\n//@ts-ignore\nimport algo from \"react-stockcharts/lib/algorithm\";\nimport { OHLCV, ChartType, Indicator, Transaction, SMA } from \"./types\";\n\ninterface Props {\n    type: string\n    chartType: ChartType\n    width: number\n    data: OHLCV[]\n    transactions: Transaction[]\n    ratio: number\n    indicator: Indicator\n}\nlet CandleStickChart: React.FC<Props> = (props) => {\n\n    const { type, width, data: initialData, ratio, chartType, indicator, transactions } = props;\n\n    /*const getWidthByChartType = (type: ChartType) => {\n        switch (type) {\n            case 'm5':\n                return timeIntervalBarWidth(utcMinute.every(5))\n            case 'm15':\n                return timeIntervalBarWidth(utcMinute.every(15))\n            case 'h1':\n                return timeIntervalBarWidth(utcHour)\n            case 'h4':\n                return timeIntervalBarWidth(utcHour.every(4)) // 4.0だとなぜか細くなる\n            default:\n                return timeIntervalBarWidth(utcHour)\n        }\n    }*/\n\n    const sameDateByChartType = (type: ChartType, d1: Moment, d2: Moment) => {\n        switch (type) {\n            case 'm5':\n                return d2.isSameOrAfter(d1, 'minutes') && d2.isBefore(d1.add(5, 'minutes'), 'minutes')\n            case 'm15':\n                return d2.isSameOrAfter(d1, 'minutes') && d2.isBefore(d1.add(15, 'minutes'), 'minutes')\n            case 'h1':\n                return d2.isSameOrAfter(d1, 'hours') && d2.isBefore(d1.add(1, 'hours'), 'hours')\n            case 'h4':\n                return d2.isSameOrAfter(d1, 'hours') && d2.isBefore(d1.add(4, 'hours'), 'hours')\n            default:\n                return d1.isSame(d2, 'hours')\n        }\n    }\n\n    const createSMA = (data: SMA) => {\n        return sma()\n            .id(0)\n            .options({ windowSize: data.window })\n            .merge((d: any, c: any) => { d[\"sma\" + data.window] = c; })\n            .accessor((d: any) => d[\"sma\" + data.window]);\n    }\n    const sma20 = sma()\n        .id(0)\n        .options({ windowSize: 20 })\n        .merge((d: any, c: any) => { d.sma20 = c; })\n        .accessor((d: any) => d.sma20);\n\n    const sma50 = sma()\n        .options({ windowSize: 50, })\n        .merge((d: any, c: any) => { d.sma50 = c; }) // Required, if not provided, log a error\n        .accessor((d: any) => d.sma50) // Required, if not provided, log an error during calculation\n        .stroke(\"blue\"); // Optional\n\n    const buySell = algo()\n        .windowSize(2)\n        .accumulator(([prev, now]: any) => {\n            //console.log(\"now\", now, now.low, now.date)\n            const { date } = now;\n            for (let i = 0; i < transactions.length; i++) {\n                //console.log(\"now2\", now, now.low, now.date, transactions[i].date)\n                const transaction = transactions[i]\n                const isSame = sameDateByChartType(chartType, moment(date), transaction.date)\n                if (isSame) {\n                    if (transaction.amount > 0) {\n                        return \"LONG\"\n                    } else if (transaction.amount < 0) {\n                        return \"SHORT\"\n                    }\n                }\n            }\n        })\n        .merge((d: any, c: any) => { d.longShort = c; });\n\n    const defaultAnnotationProps = {\n        fontFamily: \"Glyphicons Halflings\",\n        fontSize: 20,\n        opacity: 0.8,\n        onClick: console.log.bind(console),\n    };\n\n    const longAnnotationProps = {\n        ...defaultAnnotationProps,\n        fill: \"#006517\",\n        text: \"\\ue093\",\n        y: ({ yScale, datum }: any) => yScale(datum.low) + 20,\n        tooltip: \"Go long\",\n    };\n\n    const shortAnnotationProps = {\n        ...defaultAnnotationProps,\n        fill: \"#E20000\",\n        text: \"\\ue094\",\n        y: ({ yScale, datum }: any) => yScale(datum.high),\n        tooltip: \"Go short\",\n    };\n    //const xAccessor = (d: any) => d.date;\n    /*const xExtents = [\n        xAccessor(last(data)),\n        xAccessor(data[data.length - 100])\n    ];*/\n    const calculatedData = buySell(sma20(sma50(initialData)));\n    const xScaleProvider = discontinuousTimeScaleProvider\n        .inputDateAccessor((d: any) => d.date);\n    const {\n        data,\n        xScale,\n        xAccessor,\n        displayXAccessor,\n    } = xScaleProvider(calculatedData);\n    console.log(\"render: \", initialData, data, sma20.accessor(), sma20.stroke())\n    const start = xAccessor(last(data));\n    const end = xAccessor(data[Math.max(0, data.length - 150)]);\n    const xExtents = [start, end];\n\n\n    const createIndicatorLayers = () => {\n        const layers: any = []\n        indicator.sma.forEach((data) => {\n            layers.push(\n                <LineSeries yAccessor={sma20.accessor()} stroke={sma20.stroke()} />\n            )\n        })\n        return layers\n    }\n    return (\n        <ChartCanvas height={400}\n            ratio={ratio}\n            width={width}\n            margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\n            type={type}\n            seriesName=\"MSFT\"\n            data={data}\n            xAccessor={xAccessor}\n            displayXAccessor={displayXAccessor}\n            xScale={xScale}\n            xExtents={xExtents}>\n\n            <Chart id={1} yExtents={[(d: any) => [d.high, d.low], sma20.accessor()]}>\n                <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6} />\n                <YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\n                {/*<CandlestickSeries width={timeIntervalBarWidth(utcDay)} />*/}\n                <CandlestickSeries />\n\n                <LineSeries yAccessor={sma20.accessor()} stroke={sma20.stroke()} />\n                <LineSeries yAccessor={sma50.accessor()} stroke={sma50.stroke()} />\n                <CurrentCoordinate yAccessor={sma20.accessor()} fill={sma20.stroke()} />\n                <Annotate with={LabelAnnotation} when={(d: any) => d.longShort === \"LONG\"}\n                    usingProps={longAnnotationProps} />\n                <Annotate with={LabelAnnotation} when={(d: any) => d.longShort === \"SHORT\"}\n                    usingProps={shortAnnotationProps} />\n            </Chart>\n        </ChartCanvas>\n    );\n\n}\n\nexport default fitWidth(CandleStickChart)\n","import moment, { Moment } from \"moment\";\nimport { v4 as uuid } from 'uuid';\n\nexport const mockTransactions = [\n    {\n        id: uuid(),\n        date: moment(\"2016-03-25\"),\n        amount: -100,\n        price: 420.1,\n        value: 40000,\n        symbol: \"\",\n    },\n    {\n        id: uuid(),\n        date: moment(\"2016-03-26\"),\n        amount: 100,\n        price: 420.1,\n        value: -40000,\n        symbol: \"\",\n    },\n    {\n        id: uuid(),\n        date: moment(\"2016-03-27\"),\n        amount: -100,\n        price: 420.1,\n        value: 40000,\n        symbol: \"\",\n    },\n    {\n        id: uuid(),\n        date: moment(\"2016-03-28\"),\n        amount: 100,\n        price: 420.1,\n        value: -40000,\n        symbol: \"\",\n    },\n    {\n        id: uuid(),\n        date: moment(\"2016-03-29\"),\n        amount: -100,\n        price: 420.1,\n        value: 40000,\n        symbol: \"\",\n    },\n]\n\nexport const dataset = [\n    {\n        \"datetime\": \"2005-06-30 21:00:00+00:00\",\n        \"volume\": 47521.0,\n        \"high\": 111.790,\n        \"low\": 110.620,\n        \"open\": 110.916,\n        \"close\": 111.790\n    },\n    {\n        \"datetime\": \"2005-07-01 21:00:00+00:00\",\n        \"volume\": 1.0,\n        \"high\": 111.790,\n        \"low\": 111.790,\n        \"open\": 111.790,\n        \"close\": 111.790\n    },\n    {\n        \"datetime\": \"2005-07-02 21:00:00+00:00\",\n        \"volume\": 588.0,\n        \"high\": 111.745,\n        \"low\": 111.635,\n        \"open\": 111.740,\n        \"close\": 111.665\n    },\n    {\n        \"datetime\": \"2005-07-03 21:00:00+00:00\",\n        \"volume\": 37730.0,\n        \"high\": 111.890,\n        \"low\": 111.332,\n        \"open\": 111.665,\n        \"close\": 111.616\n    },\n    {\n        \"datetime\": \"2005-07-04 21:00:00+00:00\",\n        \"volume\": 44689.0,\n        \"high\": 112.126,\n        \"low\": 111.450,\n        \"open\": 111.616,\n        \"close\": 111.740\n    },\n    {\n        \"datetime\": \"2005-07-05 21:00:00+00:00\",\n        \"volume\": 43839.0,\n        \"high\": 112.288,\n        \"low\": 111.458,\n        \"open\": 111.740,\n        \"close\": 112.188\n    },\n    {\n        \"datetime\": \"2005-07-06 21:00:00+00:00\",\n        \"volume\": 48156.0,\n        \"high\": 112.340,\n        \"low\": 111.492,\n        \"open\": 112.188,\n        \"close\": 112.082\n    },\n    {\n        \"datetime\": \"2005-07-07 21:00:00+00:00\",\n        \"volume\": 43204.0,\n        \"high\": 112.598,\n        \"low\": 111.788,\n        \"open\": 112.082,\n        \"close\": 112.180\n    },\n    {\n        \"datetime\": \"2005-07-09 21:00:00+00:00\",\n        \"volume\": 599.0,\n        \"high\": 112.195,\n        \"low\": 112.125,\n        \"open\": 112.190,\n        \"close\": 112.165\n    },\n    {\n        \"datetime\": \"2005-07-10 21:00:00+00:00\",\n        \"volume\": 41028.0,\n        \"high\": 112.260,\n        \"low\": 111.688,\n        \"open\": 112.165,\n        \"close\": 111.808\n    },\n    {\n        \"datetime\": \"2005-07-11 21:00:00+00:00\",\n        \"volume\": 47605.0,\n        \"high\": 111.838,\n        \"low\": 110.758,\n        \"open\": 111.818,\n        \"close\": 110.810\n    },\n    {\n        \"datetime\": \"2005-07-12 21:00:00+00:00\",\n        \"volume\": 43286.0,\n        \"high\": 112.290,\n        \"low\": 110.800,\n        \"open\": 110.810,\n        \"close\": 111.860\n    },\n    {\n        \"datetime\": \"2005-07-13 21:00:00+00:00\",\n        \"volume\": 45661.0,\n        \"high\": 112.378,\n        \"low\": 111.646,\n        \"open\": 111.860,\n        \"close\": 112.358\n    },\n    {\n        \"datetime\": \"2005-07-14 21:00:00+00:00\",\n        \"volume\": 43401.0,\n        \"high\": 112.428,\n        \"low\": 111.766,\n        \"open\": 112.358,\n        \"close\": 112.160\n    },\n    {\n        \"datetime\": \"2005-07-15 21:00:00+00:00\",\n        \"volume\": 1.0,\n        \"high\": 112.160,\n        \"low\": 112.160,\n        \"open\": 112.160,\n        \"close\": 112.160\n    },\n    {\n        \"datetime\": \"2005-07-16 21:00:00+00:00\",\n        \"volume\": 291.0,\n        \"high\": 112.285,\n        \"low\": 112.105,\n        \"open\": 112.130,\n        \"close\": 112.275\n    },\n    {\n        \"datetime\": \"2005-07-17 21:00:00+00:00\",\n        \"volume\": 32477.0,\n        \"high\": 112.360,\n        \"low\": 111.518,\n        \"open\": 112.275,\n        \"close\": 111.988\n    },\n]","import { tsvParse, csvParse } from \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport { mockTransactions } from \"./dataset/data\";\nimport moment from 'moment'\n\nfunction parseData(parse) {\n    return function (d) {\n        d.date = parse(d.date);\n        d.open = +d.open;\n        d.high = +d.high;\n        d.low = +d.low;\n        d.close = +d.close;\n        d.volume = +d.volume;\n\n        return d;\n    };\n}\n\nconst parseDate = timeParse(\"%Y-%m-%d\");\nconst parseDateTime = timeParse(\"%Y-%m-%d %H:%M:%S\");\n\nexport const getData = async () => {\n    let dataset = []\n    await fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\n        .then(response => response.text())\n        .then(data => {\n            console.log(tsvParse(data, parseData(parseDate)))\n            tsvParse(data, parseData(parseDate))\n            dataset = tsvParse(data, parseData(parseDate))\n        })\n    return dataset;\n}\n\n\nexport const getM1Data = async () => {\n    let dataset = []\n    await fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/bitfinex_xbtusd_1m.csv\")\n        .then(response => response.text())\n        .then(data => csvParse(data, parseData(parseDateTime)))\n        .then(data => {\n            data.sort((a, b) => {\n                return a.date.valueOf() - b.date.valueOf();\n            });\n            console.log(\"data4: \", data)\n            dataset = data\n        })\n    return dataset;\n}\n\nexport const getM5Data = async () => {\n    let dataset = []\n    await fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/bitstamp_xbtusd_5m.csv\")\n        .then(response => response.text())\n        .then(data => csvParse(data, parseData(parseDateTime)))\n        .then(data => {\n            data.sort((a, b) => {\n                return a.date.valueOf() - b.date.valueOf();\n            });\n            console.log(\"data4: \", data)\n            dataset = data\n        })\n    return dataset;\n}\n\nexport const getM15Data = async () => {\n    let dataset = []\n    await fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/bitstamp_xbtusd_15m.csv\")\n        .then(response => response.text())\n        .then(data => csvParse(data, parseData(parseDateTime)))\n        .then(data => {\n            data.sort((a, b) => {\n                return a.date.valueOf() - b.date.valueOf();\n            });\n            console.log(\"data4: \", data)\n            const newData = [] //M15がM5と等しかったため対応\n            data.forEach(item => {\n                const minute = moment(item.date).minutes()\n                if (minute === 15 || minute === 30 || minute === 45 || minute === 0) {\n                    newData.push(item)\n                }\n            });\n            dataset = newData\n        })\n    return dataset;\n}\n\nexport const getH1Data = async () => {\n    let dataset = []\n    await fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/bitstamp_xbtusd_1h.csv\")\n        .then(response => response.text())\n        .then(data => csvParse(data, parseData(parseDateTime)))\n        .then(data => {\n            data.sort((a, b) => {\n                return a.date.valueOf() - b.date.valueOf();\n            });\n            console.log(\"data4: \", data)\n            dataset = data\n        })\n    return dataset;\n}\n\nexport const getH4Data = async () => {\n    let dataset = []\n    await fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/bitstamp_xbtusd_4h.csv\")\n        .then(response => response.text())\n        .then(data => csvParse(data, parseData(parseDateTime)))\n        .then(data => {\n            data.sort((a, b) => {\n                return a.date.valueOf() - b.date.valueOf();\n            });\n            console.log(\"data4: \", data)\n            dataset = data\n        })\n    return dataset;\n}\n\n\nexport const getTransactionData = async () => {\n    let transactions = mockTransactions\n    return transactions;\n}","import moment, { Moment } from \"moment\";\nimport { v4 as uuid } from 'uuid';\n\nexport type ChartType = \"m1\" | \"m5\" | \"m15\" | \"h1\" | \"h4\" | \"d1\" | \"w1\"\n\nexport class Data {\n    Chart: {\n        m1: OHLCV[]\n        m5: OHLCV[]\n        m15: OHLCV[]\n        h1: OHLCV[]\n        h4: OHLCV[]\n        d1: OHLCV[]\n        w1: OHLCV[]\n    }\n    transactions: Transaction[]\n\n    constructor() {\n        this.Chart = {\n            m1: [],\n            m5: [],\n            m15: [],\n            h1: [],\n            h4: [],\n            d1: [],\n            w1: [],\n        }\n        this.transactions = []\n    }\n\n    setChart(jsonArr: object[], type: ChartType) {\n        try {\n\n            const data: OHLCV[] = []\n            jsonArr.forEach((json: any) => {\n                //console.log(\"date\", moment(json.date))\n                if (moment(json.date).isSameOrBefore('2016-03-30') && moment(json.date).isSameOrAfter('2016-03-18')) {\n\n                    data.push({\n                        date: json.date,\n                        open: json.open,\n                        high: json.high,\n                        low: json.low,\n                        close: json.close,\n                        volume: json.volume,\n                    } as OHLCV)\n                }\n            })\n            switch (type) {\n                case \"m1\":\n                    this.Chart.m1 = data\n                    break;\n                case \"m5\":\n                    this.Chart.m5 = data\n                    break;\n                case \"m15\":\n                    this.Chart.m15 = data\n                    break;\n                case \"h1\":\n                    this.Chart.h1 = data\n                    break;\n                case \"h4\":\n                    this.Chart.h4 = data\n                    break;\n                case \"d1\":\n                    this.Chart.d1 = data\n                    break;\n                case \"w1\":\n                    this.Chart.w1 = data\n                    break;\n                default:\n                    break;\n            }\n            console.log(\"finish set chart\", data, type)\n        } catch (err) {\n            console.log(\"setChart Error\", err)\n        }\n\n    }\n\n    setTransaction(jsonArr: object[]) {\n        try {\n            const data: Transaction[] = []\n            jsonArr.forEach((json: any) => {\n                data.push({\n                    id: json.id,\n                    date: json.date,\n                    amount: json.amount,\n                    price: json.price,\n                    value: json.value,\n                    symbol: json.symbol,\n                } as Transaction)\n            })\n            this.transactions = data\n        } catch (err) {\n            console.log(\"setTransaction Error\", err)\n        }\n    }\n}\n\nexport class OHLCV {\n    date: Moment\n    open: number\n    high: number\n    low: number\n    close: number\n    volume: number\n\n    constructor(date: Moment, open: number, high: number, low: number, close: number, volume: number) {\n        this.date = date\n        this.open = open\n        this.high = high\n        this.low = low\n        this.close = close\n        this.volume = volume\n    }\n\n    setJson(json: any) {\n        try {\n            this.date = json.date\n            this.open = json.open\n            this.high = json.high\n            this.low = json.low\n            this.close = json.close\n            this.volume = json.volume\n        } catch (err) {\n            console.log(\"setOHLCV Error\", err)\n        }\n    }\n\n    toJson() {\n        return {\n            \"date\": this.date,\n            \"open\": this.open,\n            \"high\": this.high,\n            \"low\": this.low,\n            \"close\": this.close,\n            \"volume\": this.volume\n        }\n    }\n}\n\nexport class Transaction {\n    id: string\n    date: Moment\n    amount: number\n    price: number\n    value: number  // - amount * price\n    symbol: string // 株式名や通貨ペアなど\n\n    constructor(date: Moment, amount: number, price: number, value: number, symbol: string) {\n        this.id = uuid()\n        this.date = date\n        this.amount = amount\n        this.price = price\n        this.value = value\n        this.symbol = symbol\n    }\n\n    setJson(json: any) {\n        try {\n            this.id = uuid()\n            this.date = json.date\n            this.amount = json.amount\n            this.price = json.price\n            this.value = json.value\n            this.symbol = json.symbol\n        } catch (err) {\n            console.log(\"setTransaction Error\", err)\n        }\n    }\n\n    toJson() {\n        return {\n            \"id\": this.id,\n            \"date\": this.date,\n            \"amount\": this.amount,\n            \"price\": this.price,\n            \"value\": this.value,\n            \"symbol\": this.symbol\n        }\n    }\n}\n\n\nexport class Indicator {\n    sma: SMA[]\n    constructor() {\n        this.sma = []\n    }\n\n}\n\nexport interface SMA {\n    window: number\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport io from \"socket.io-client\";\n//@ts-ignore\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nimport Chart from './chart';\nimport { getData, getM1Data, getM5Data, getM15Data, getH1Data, getH4Data, getTransactionData } from \"./utils\"\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport Stop from '@material-ui/icons/Stop';\nimport SkipNext from '@material-ui/icons/SkipNext';\nimport SkipPrevious from '@material-ui/icons/SkipPrevious';\nimport moment from 'moment'\nimport { Typography } from '@material-ui/core';\nimport { Data, ChartType, OHLCV, Indicator } from './types';\n\nconst socket: SocketIOClient.Socket = io('http://localhost:8000');\n\n// TODO\nexport const useGetDataSet = () => {\n  const [status, setStatus] = useState({ Type: \"NONE\", Progress: 0, Log: \"\", Error: \"\", Loading: false })\n  const [data, setData] = useState<Data>(new Data())\n  //const files: FileInfo[] = useSelector((state: ReduxState)=> state.App.Files)\n\n  const getDataSet = useCallback(async () => {\n    try {\n      // Loading開始\n      setStatus({ Progress: 0, Log: \"\", Error: \"\", Loading: true, Type: \"RUNNING\" })\n\n      const m5data = await getM5Data()\n      const m15data = await getM15Data()\n      const h1data = await getH1Data()\n      const h4data = await getH4Data()\n      const transactions = await getTransactionData()\n      const data: Data = new Data()\n      console.log(\"debug: \", m5data, m15data, h1data, h4data, transactions)\n      data.setChart(m5data, \"m5\")\n      data.setChart(m15data, \"m15\")\n      data.setChart(h1data, \"h1\")\n      data.setChart(h4data, \"h4\")\n      data.setTransaction(transactions)\n\n      setData(data)\n      console.log(\"data2: \", data)\n\n      // Loading終了\n      setStatus((preStatus) => ({ ...preStatus, Progress: 100, Loading: false, Type: \"FINISHED\" }))\n\n    } catch (err) {\n      console.log(\"error: \", err)\n      setStatus((preStatus) => ({ ...preStatus, Progress: 0, Loading: false, Error: err, Type: \"RUNNING\" }))\n    }\n\n  }, [status])\n\n  return { \"getDataSet\": getDataSet, \"dataset\": data, \"status\": status }\n}\n\nconst emittest = async () => {\n  while (true) {\n    console.log(\"emit\")\n    await timeout(1000)\n    //socket.emit(\"event\", { value: \"testtest\" })\n  }\n}\n\nasync function timeout(ms: number) {\n  await new Promise(resolve => setTimeout(resolve, ms));\n  return\n}\n\nconst App = () => {\n\n  const [data, setData] = useState<Data>(new Data())\n  const { getDataSet, dataset, status } = useGetDataSet()\n  const [playStatus, setPlayStatus] = useState({ \"play\": false, \"id\": undefined, \"speed\": 1000 })\n  const [chartStatus, setChartStatus] = useState<{ type: ChartType }>({ type: \"h1\" })\n\n  useEffect(() => {\n    console.log(\"recieve message\")\n    socket.on(\"connect\", () => console.log(\"connected!\"));\n    socket.on(\"transactionstest\", (data: any) => console.log(\"transactions\", data));\n    getDataSet()\n    //emittest()\n  }, [])\n\n  // useRunCommandの終了処理\n  useEffect(() => {\n    if (status.Type === \"FINISHED\") {\n      console.log(\"get data\")\n      setData(dataset)\n    }\n  }, [status]);\n\n  useEffect(() => {\n    if (playStatus.play === true && playStatus.id === undefined) {\n      console.log(\"useEffect\")\n      const id = setInterval(() => {\n        setData((preData: Data) => {\n          const tgtChart = preData.Chart[chartStatus.type]\n          const tgtdata = tgtChart[tgtChart.length - 1]\n          console.log(preData, tgtdata.date, moment(tgtdata.date).add(1, \"days\").toDate())\n          const nextData: Data = preData\n          nextData.Chart[chartStatus.type].push({\n            date: moment(tgtdata.date).add(1, \"days\"),\n            open: tgtdata.open,\n            high: tgtdata.high,\n            low: tgtdata.low,\n            close: tgtdata.close,\n            volume: tgtdata.volume,\n          } as OHLCV)\n          return nextData\n        })\n      }, playStatus.speed);\n      setPlayStatus((preStatus: any) => {\n        return { ...preStatus, id: id, play: true }\n      })\n    }\n  }, [playStatus]);\n\n  const play = () => {\n    console.log(\"play\")\n    setPlayStatus((preStatus: any) => {\n      return { ...preStatus, play: true }\n    })\n  }\n\n  const stop = () => {\n    console.log(\"stop\")\n    if (playStatus.id != undefined) {\n      clearInterval(playStatus.id)\n      setPlayStatus((preStatus: any) => {\n        return { ...preStatus, id: undefined, play: false }\n      })\n    }\n  }\n\n  const speedUp = () => {\n    console.log(\"speedup\")\n    setPlayStatus((preStatus: any) => {\n      clearInterval(playStatus.id)\n      return { ...preStatus, speed: preStatus.speed / 2, id: undefined }\n    })\n  }\n\n  const speedDown = () => {\n    console.log(\"speeddown\")\n    setPlayStatus((preStatus: any) => {\n      clearInterval(playStatus.id)\n      return { ...preStatus, speed: preStatus.speed * 2, id: undefined }\n    })\n  }\n\n  if (status.Loading) {\n    return <div>Loading...</div>\n  }\n\n\n  return (\n    <div>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={() => setChartStatus({ ...chartStatus, type: \"m5\" })}>5M</Button>\n        <Button onClick={() => setChartStatus({ ...chartStatus, type: \"m15\" })}>15M</Button>\n        <Button onClick={() => setChartStatus({ ...chartStatus, type: \"h1\" })}>1H</Button>\n        <Button onClick={() => setChartStatus({ ...chartStatus, type: \"h4\" })}>4H</Button>\n        {/*<Button onClick={() => setChartStatus({ ...chartStatus, type: \"d1\" })}>D</Button>\n        <Button onClick={() => setChartStatus({ ...chartStatus, type: \"w1\" })}>W</Button>*/}\n      </ButtonGroup>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n        <IconButton onClick={stop} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <Stop />\n        </IconButton>\n        <IconButton onClick={speedDown} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <SkipPrevious />\n        </IconButton>\n        <IconButton onClick={play} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <PlayArrow />\n        </IconButton>\n        <IconButton onClick={speedUp} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <SkipNext />\n        </IconButton>\n      </ButtonGroup>\n      <Typography>{\"speed: \" + playStatus.speed}</Typography>\n      <Typography>{\"chartType: \" + chartStatus.type}</Typography>\n      <TypeChooser>\n        {(type: any) => <Chart type={type} data={data.Chart[chartStatus.type]} chartType={chartStatus.type} indicator={new Indicator()} transactions={data.transactions} />}\n      </TypeChooser>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}