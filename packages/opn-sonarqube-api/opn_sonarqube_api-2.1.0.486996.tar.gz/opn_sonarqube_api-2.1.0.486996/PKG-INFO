Metadata-Version: 1.1
Name: opn_sonarqube_api
Version: 2.1.0.486996
Summary: Open SonarQube API Handler
Home-page: UNKNOWN
Author: open sas
Author-email: sebastien.bettinger@open-groupe.com
License: MIT
Description: ====================
        Python SonarQube API
        ====================
        
        .. image:: https://img.shields.io/github/license/kako-nawao/python-sonarqube-api.svg
            :target: http://www.opensource.org/licenses/MIT
        
        .. image:: https://img.shields.io/pypi/pyversions/sonarqube-api.svg
            :target: https://pypi.python.org/pypi/sonarqube-api
        .. image:: https://img.shields.io/pypi/v/sonarqube-api.svg
            :target: https://pypi.python.org/pypi/sonarqube-api
        
        .. image:: https://img.shields.io/travis/kako-nawao/python-sonarqube-api.svg
            :target: https://travis-ci.org/kako-nawao/python-sonarqube-api
        .. image:: https://img.shields.io/codecov/c/github/kako-nawao/python-sonarqube-api.svg
            :target: https://codecov.io/gh/kako-nawao/python-sonarqube-api
        
        API Handler for SonarQube web service, providing basic authentication (which
        seems to be the only kind that SonarQube supports) and a few methods to run sonarqube API.
        
        Installation
        ============
        
        Install from PyPI::
        
            pip install opn-sonarqube-api
        
        Compatibility
        -------------
        
        This package is compatible Python versions 2.7, 3.4, 3.5 and 3.6.
        Probably others, but those are the ones against which we build (by Travis CI).
        
        
        Usage
        =====
        
        The API handler is easy to use, you just need to initialize it with the
        connection parameters (by default *localhost* on port *9000* without
        authentication) and use any of the methods to get the required information or
        create rules.
        
        Example getting projects with coverage and issues metrics::
        
            from sonarqube_api.sonar import SonarAPI
        
            h = SonarAPI(user='admin', password='admin')
            for project in h.get_resources_full_data(metrics=['coverage', 'violations']):
                # do something with project data...
        
        Since the actual response data from SonarQube server is usually paged, all
        methods return generators to optimize memory as well retrieval performance of
        the first items.
        
        You can also specify a single resources to fetch, but keep in mind that the resource methods
        return generators, so you still need to *get the next object*::
        
            proj = next(h.get_resources_full_data(resource='some:example'))
        
        Sonar authentication tokens can also be used in place of username and password,
        which is particularly useful when accessing the SonarQube API from a CI server,
        as tokens can easily be revoked in the event of unintended exposure::
        
            h = SonarAPI(token='f052f55b127bb06f63c31cb2064ea301048d9e5d')
        
        Supported Methods
        -----------------
        
        The methods supported by the SonarAPI are:
        
        * ``activate_rule``: activate a rule for a given profile in the server
        * ``create_rule``: create a rule in the server
        * ``get_metrics``: yield metrics definition
        * ``get_rules``: yield active rules
        * ``get_resources_debt``: yield projects with their technical debt by category
        * ``get_resources_metrics``: yield projects with some general metrics
        * ``get_resources_full_data``: yield projects with their general metrics and technical debt by category (merge of previous two methods)
        * ``validate_authentication``: validate authentication credentials
        
        * ``create_group``
        * ``search_group``
        * ``update_group``
        * ``delete_group``
        
        * ``create_permission_template``
        * ``update_permission_template``
        * ``search_permission_template``
        * ``delete_permission_template``
        
        * ``add_group_to_template``
        * ``list_groups_of_template``
        * ``remove_group_from_template``
        
        * ``add_permission_to_user``
        * ``remove_permission_to_user``
        * ``add_permission_to_group``
        * ``remove_permission_to_group``
        * ``search_permission_for_group``
        
        * ``generate_token``
        * ``revoke_token``
        * ``user_tokens``
        * ``user_current``
        
        * ``get_metrics``
        
        * ``restore_quality_profile_from_xml``
        * ``create_quality_profile``
        * ``add_project_to_quality_profile``
        * ``delete_quality_profile``
        
        * ``activate_rule``
        * ``get_resources_debt``
        * ``get_resources_metrics``
        * ``create_rule``
        * ``get_rules``
        * ``get_resources_full_data``
        
        * ``setting``
        * ``getting``
        
        * ``list_qualitygates``
        * ``show_qualitygates``
        * ``create_qualitygates``
        * ``destroy_qualitygates``
        * ``create_condition_qualitygates``
        * ``create_quality_gate_from_json``
        * ``delete_condition_qualitygates``
        * ``update_condition_qualitygates``
        
        
        
Keywords: api sonar sonarqube
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Plugins
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development
