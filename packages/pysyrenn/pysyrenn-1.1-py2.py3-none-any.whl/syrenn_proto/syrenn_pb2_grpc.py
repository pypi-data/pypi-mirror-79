# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from syrenn_proto import syrenn_pb2 as syrenn__proto_dot_syrenn__pb2


class SyReNNTransformerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Transform = channel.stream_stream(
        '/syrenn_server.SyReNNTransformer/Transform',
        request_serializer=syrenn__proto_dot_syrenn__pb2.TransformRequest.SerializeToString,
        response_deserializer=syrenn__proto_dot_syrenn__pb2.TransformResponse.FromString,
        )


class SyReNNTransformerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Transform(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SyReNNTransformerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Transform': grpc.stream_stream_rpc_method_handler(
          servicer.Transform,
          request_deserializer=syrenn__proto_dot_syrenn__pb2.TransformRequest.FromString,
          response_serializer=syrenn__proto_dot_syrenn__pb2.TransformResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'syrenn_server.SyReNNTransformer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
