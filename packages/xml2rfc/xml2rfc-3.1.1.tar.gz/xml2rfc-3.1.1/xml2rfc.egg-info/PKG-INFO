Metadata-Version: 1.1
Name: xml2rfc
Version: 3.1.1
Summary: Xml2rfc generates RFCs and IETF drafts from document source in XML according to the IETF xml2rfc v2 and v3 vocabularies.
Home-page: https://tools.ietf.org/tools/xml2rfc/trac/
Author: Henrik Levkowetz
Author-email: henrik@levkowetz.com
License: BSD-3-Clause
Download-URL: https://pypi.python.org/pypi/xml2rfc
Description: Introduction
        ============
        
        The IETF_ uses a specific format for the standards and other documents it
        publishes as RFCs_, and for the draft documents which are produced when
        developing documents for publications.  There exists a number of different
        tools to facilitate the formatting of drafts and RFCs according to the
        existing rules, and this tool, **xml2rfc**, is one of them.  It takes as input
        an xml file which contains the text and meta-information about author names
        etc., and transforms it into suitably formatted output.  The input xml file
        should follow the grammars in RFC7749_ (for v2 documents) or RFC7991_ (for 
        v3 documents). Note that the grammar for v3 is still being refined, and 
        changes will eventually be captured in the `bis draft for 7991`_. 
        Changes not yet captured can be seen in the xml2rfc source `v3.rng`_.
        
        **xml2rfc** provides a variety of output formats. See the command line
        help for a full list of formats. It also provides conversion from v2 to
        v3, and can run the preptool_ on its input.
        
        .. _IETF: https://www.ietf.org/
        .. _RFCs: https://www.rfc-editor.org/
        .. _RFC7749: https://tools.ietf.org/html/rfc7749
        .. _RFC7991: https://tools.ietf.org/html/rfc7991
        .. _bis draft for 7991: https://tools.ietf.org/html/draft-iab-rfc7991bis
        .. _v3.rng: https://trac.tools.ietf.org/tools/xml2rfc/trac/browser/trunk/cli/xml2rfc/data/v3.rng
        .. _preptool: https://tools.ietf.org/html/rfc7998
        
        Installation
        ============
        
        Installation of the python package is done as usual with 'pip install xml2rfc',
        using appropriate switches and/or sudo.
        
        Installation of support libraries for the PDF-formatter
        -------------------------------------------------------
        
        In order to generate PDFs, xml2rfc uses the WeasyPrint module, which
        depends on external libaries that must be installed as native packages
        on your platform, separately from the xml2rfc install.
        
        First, install the Cairo, Pango, and GDK-PixBuf library files on your
        system.  See installation instructions on the WeasyPrint Docs:
        
            https://weasyprint.readthedocs.io/en/stable/install.html
        
        (Python 3 is not needed if your system Python is 2.7, though).
        
        (On some OS X systems with System Integrity Protection active, you may
        need to create a symlink from your home directory to the library installation
        directory (often /opt/local/lib):
        
            ln -s /opt/local/lib ~/lib
        
        in order for weasyprint to find the installed cairo and pango libraries.
        Whether this is needed or not depends on whether you used macports or homebrew
        to install cairo and pango, and the homebrew / macport version.)
        
        Next, install the pycairo and weasyprint python modules using pip.
        Depending on your system, you may need to use 'sudo' or install in
        user-specific directories, using the --user switch.  On OS X in
        particular, you may also need to install a newer version of setuptools
        using --user before weasyprint can be installed.  If you install with 
        the --user switch, you may need to also set PYTHONPATH, e.g.,
        
            PYTHONPATH=/Users/henrik/Library/Python/2.7/lib/python/site-packages
        
        for Python 2.7.
        
        The basic pip commands (modify as needed according to the text above)
        are:
        
            pip install 'pycairo>=1.18' 'weasyprint<=0.42.3'
        
        With these installed and available to xml2rfc, the --pdf switch will be
        enabled.
        
        For PDF output, you also need to install the Noto font set.  Download the full
        set from https://noto-website-2.storage.googleapis.com/pkgs/Noto-unhinted.zip,
        and install as appropriate for your platform.
        
        Usage
        =====
        
        xml2rfc accepts a single XML document as input and outputs to one or more conversion formats.
        
        **Basic Usage**: ``xml2rfc SOURCE [options] FORMATS...``
        
        Run ``xml2rfc --help`` for a full listing of command-line options.
        
        
        Changelog
        =========
        
        
        Version 3.1.1 (13 Sep 2020)
        ------------------------------------------------
        
        
          * Fixed an issue with empty table cells that could cause an exception.
        
        
        
        
        
        
        
        Version 3.1.0 (13 Sep 2020)
        ------------------------------------------------
        
        
          * Fixed an issue with an extra comma rendered in HTML for empty date 
            elements.  Fixes issue #542.
        
          * Added escaping of quotes in page footer and header components when
            generating the @page CSS for PDF output, in order to avoid issues
            when building quoted CSS content strings from the components.  
            Fixes issue #544.
        
          * Added a CSS workaround for an unexpected HTML rendering behaviour in 
            some browsers, where a <dt> following an empty <dd> would be indented.  
            Fixes issue #545.
        
          * Improved error messages and the handling of artwork with no "type" 
            attribute value when "binary-art" would have been correct.
            Fixes issue #535.
        
          * Reverted the default value for the --legacy-date-format to false, on 
            request from the RPC.
        
          * Fixed table cell padding to not add left paddding for left-aligned 
            columns if not all lines in the column can be padded in the same manner,
            and similarly for right-aligned columns.  Fixes issue #543.
        
          * Tweaked utils.build_dataurl() to give consistent results across Python 
            versions (tilde was added to the default safe characters in Python 3.7,
            so the default percentage-escape results of binary content differed if
            it contained a 0x7e (tilde) character.
        
          * Fixed a bug in finding the length of the longest word in a table cell, 
            used to determine minimum cell width for text output.
        
          * Added a new test case with a tightly constrained table to excercise the 
            issue in #543.
        
          * Added <title> to the list of elements that can have Latin script 
            content without needing the 'ascii' attribute set.  Fixes issue #525.
        
          * Refined the rendering of <xref> with format='title' for the text 
            formatter.
        
          * Added docfile and manpage information about elements that are permitted 
            to have Latin script content without an ascii attribute equivalent being 
            set.
        
          * Expanded on the docfile description of elements that can have Latin 
            script content without ASCII fallback.
        
          * Added a test case related to issue #525.
        
          * Changed the HTML rendering of <xref> within <name> to use square 
            brackets.  Fixes issue #498.
        
        
        
        
        
        
        
        Version 3.0.0 (02 Sep 2020)
        ------------------------------------------------
        
        
          **Transition to using the new schema v3 output formatters by default**
        
          This release provides the functionality that the 2.47.0 release had (with
          some enhancements), but is backwards incompatible because the default
          settings for some switches has changed.  The --legacy switch must now be set
          explicitly in order to use the old output formatters.  By default, XML input
          files with schema v2 content will be converted to v3 on the fly and the
          output formatting of the converted XML will be done with the new schema v3
          formatters.  With this release, support of Python 2.7, which is past
          end-of-life, will no longer be part of the test suite.
        
          There are also a number of other changes.  From the commit log:
        
          * Replaced the use of the deprecated optparse module with the newer 
            argparse python module.
        
          * Removed testing with Python 2.7, and added Python 3.8
        
          * Updated the bin/mkrelease script to generate documentation HTML and text
            for the release, place it on xml2rfc.tools.ietf.org, and mention the
            documentation URL in the release notes.
        
          * Updated the major revision to 3, given that we no longer support Py27 and
            have switched default output formatters.
        
          * Changed bin/mkrelease to install using pip3.6 on the tools servers (the 
            default pip might be for Py2.7).
        
          * Added an 'indent' attribute for <t>, in order to support indented
            paragraphs without the one-item unordered list workaround, as approved by
            the schema change board.  Added default values for the 'indent' attributes
            for <dl>, <ul>, <ol>, <t>.  For the <t> element, the 'indent' attribute
            indicates any extra amount of indentation to be used when rendering the
            paragraph of text.  The indentation amount is interpreted as characters when
            rendering plain-text documents, and en-space units when rendering in formats
            that have richer typographic support such as HTML or PDF.  One en-space is
            assumed to be the length of 0.5 em-space in CSS units.  Only non-negative
            integer amounts of indentation are supported.
        
          * Improved an error message about bad attribute values to show the line 
            of XML source on which the error was found.
        
          * Added information about command-line switches that have negations 
            (--no-foo... versions) to the context handed to the documentation template.
        
          * Changed the default of some switches for the 3.0.0 release: --v3 => 
            true; --legacy-date => true; --external-js => false.
        
          * Improved the documentation file output for switch default values and 
            for options with negation switches.
        
          * Updated the Makefile to use the appropriate 3.x release series switches.
        
          * Updated the requirements for a number of python modules.
        
          * Fixed an issue where hrefs without matching ids could be generated by 
            the HTML renderer from empty <name> elements.  This also fixed an issue 
            with missing figure and table captions in some unusual cases.
        
          * Added support for multi-level ordered lists through a '%p' (for parent) 
            code for use in the <ol> 'type' attribute.  Fixes issue #465.
        
          * Added more documentation for the --version switch
        
          * Updated the schema and tests to permit <blockquote> within <aside>.  
            Fixes issue #524.
        
          * Added a list of available postal elements for a country to the warning 
            for unused postal address parts.
        
          * Added a length limitation for the running header title in paginated 
            text documents, to avoid overwriting other parts of the running header.
        
          * Changed the schema to permit nested <sub> and <sup>, as approved by the
            v3 schema change board.
        
          * Added support for outdent handling to propagate upwards to parent 
            elements if the full needed outdent amount could not be done in the local 
            context, in order to be able to apply artwork outdenting to <artwork> 
            elements which aren't situated immediately under <section>.
        
          * Changed many instances of reference source indications (xml:base) from
            "xml2rfc.tools.ietf.org" to just "xml2rfc.ietf.org".  Removed the massaging
            of reference XML to place seriesInfo elements in the backwards-incomplatible
            location inside reference/front.  Changed the --add-xinclude flag to use
            datatracker.ietf.org/doc/bibxml3/ as the location of draft reference
            entries.
        
          * Added a couple of entries to the test suite reference cache.
        
          * Improved the handling of missing day information for <date> to make sure we 
            don't pick days outside the acceptable range for the given month and also 
            pick a reasonable value based on whether the year and month is in the past, 
            present or future.
        
          * Improved an error message for a case of disallowed XML text content.  
            Tweaked the 'block_tags' list.
        
          * Changed the manpage template to not use comma before 'and' when 
            rendering a list of 2 elements.
        
          * Changed the schema to permit <aside> within <dl> on request from the 
            RPC, with schema change board approval.  Updated renderers, CSS and tests 
            accordingly.
        
          * Tweaked the CSS for block elements that are direct first children of 
            <dd> to render the same way in HTML as in text (i.e., vertically distinct, 
            not on the same line as <dt>).
        
        
        
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: License :: OSI Approved :: BSD License
