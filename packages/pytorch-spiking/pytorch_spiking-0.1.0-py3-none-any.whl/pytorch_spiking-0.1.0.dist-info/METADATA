Metadata-Version: 2.1
Name: pytorch-spiking
Version: 0.1.0
Summary: Spiking neuron integration for PyTorch
Home-page: https://www.nengo.ai/pytorch-spiking
Author: Applied Brain Research
Author-email: info@appliedbrainresearch.com
License: Free for non-commercial use
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: Free for non-commercial use
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.5
Requires-Dist: numpy (>=1.16.0)
Requires-Dist: torch (>=1.0.0)
Provides-Extra: all
Requires-Dist: jupyter (>=1.0.0) ; extra == 'all'
Requires-Dist: matplotlib (>=2.0.0) ; extra == 'all'
Requires-Dist: nbsphinx (>=0.3.5) ; extra == 'all'
Requires-Dist: nengo-sphinx-theme (>=1.2.1) ; extra == 'all'
Requires-Dist: numpydoc (>=0.6.0) ; extra == 'all'
Requires-Dist: sphinx (>=3.0.0) ; extra == 'all'
Requires-Dist: torchvision (>=0.7.0) ; extra == 'all'
Requires-Dist: pylint (>=1.9.2) ; extra == 'all'
Requires-Dist: pytest (>=3.6.0) ; extra == 'all'
Requires-Dist: pytest-allclose (>=1.0.0) ; extra == 'all'
Requires-Dist: pytest-cov (>=2.6.0) ; extra == 'all'
Requires-Dist: pytest-rng (>=1.0.0) ; extra == 'all'
Requires-Dist: pytest-xdist (>=1.16.0) ; extra == 'all'
Provides-Extra: docs
Requires-Dist: jupyter (>=1.0.0) ; extra == 'docs'
Requires-Dist: matplotlib (>=2.0.0) ; extra == 'docs'
Requires-Dist: nbsphinx (>=0.3.5) ; extra == 'docs'
Requires-Dist: nengo-sphinx-theme (>=1.2.1) ; extra == 'docs'
Requires-Dist: numpydoc (>=0.6.0) ; extra == 'docs'
Requires-Dist: sphinx (>=3.0.0) ; extra == 'docs'
Requires-Dist: torchvision (>=0.7.0) ; extra == 'docs'
Provides-Extra: optional
Provides-Extra: tests
Requires-Dist: pylint (>=1.9.2) ; extra == 'tests'
Requires-Dist: pytest (>=3.6.0) ; extra == 'tests'
Requires-Dist: pytest-allclose (>=1.0.0) ; extra == 'tests'
Requires-Dist: pytest-cov (>=2.6.0) ; extra == 'tests'
Requires-Dist: pytest-rng (>=1.0.0) ; extra == 'tests'
Requires-Dist: pytest-xdist (>=1.16.0) ; extra == 'tests'

.. image:: https://img.shields.io/travis/com/nengo/pytorch-spiking/master.svg
  :target: https://travis-ci.com/nengo/pytorch-spiking
  :alt: Travis-CI build status

.. image:: https://img.shields.io/codecov/c/github/nengo/pytorch-spiking/master.svg
  :target: https://codecov.io/gh/nengo/pytorch-spiking
  :alt: Test coverage

**************
PyTorchSpiking
**************

PyTorchSpiking provides tools for training and running spiking neural networks
directly within the PyTorch framework. The main feature is
``pytorch_spiking.SpikingActivation``, which can be used to transform
any activation function into a spiking equivalent. For example, we can translate a
non-spiking model, such as

.. code-block:: python

    torch.nn.Sequential(
        torch.nn.Linear(5, 10),
        torch.nn.ReLU(),
    )

into the spiking equivalent:

.. code-block:: python

    torch.nn.Sequential(
        torch.nn.Linear(5, 10),
        pytorch_spiking.SpikingActivation(torch.nn.ReLU()),
    )

Models with SpikingActivation layers can be optimized and evaluated in the same way as
any other PyTorch model. They will automatically take advantage of PyTorchSpiking's
"spiking aware training": using the spiking activations on the forward pass and the
non-spiking (differentiable) activation function on the backwards pass.

PyTorchSpiking also includes various tools to assist in the training of spiking models,
such as `filtering layers
<https://www.nengo.ai/pytorch-spiking/reference.html#module-pytorch_spiking.modules>`_.

If you are interested in building and optimizing spiking neuron models, you may also
be interested in `NengoDL <https://www.nengo.ai/nengo-dl>`_. See
`this page <https://www.nengo.ai/pytorch-spiking/nengo-dl-comparison.html>`_ for a
comparison of the different use cases supported by these two packages.

**Documentation**

Check out the `documentation <https://www.nengo.ai/pytorch-spiking/>`_ for

- `Installation instructions
  <https://www.nengo.ai/pytorch-spiking/installation.html>`_
- `More detailed example introducing the features of PyTorchSpiking
  <https://www.nengo.ai/pytorch-spiking/examples/spiking-fashion-mnist.html>`_
- `API reference <https://www.nengo.ai/pytorch-spiking/reference.html>`_

Release history
===============

.. Changelog entries should follow this format:

   version (release date)
   ----------------------

   **section**

   - One-line description of change (link to GitHub issue/PR)

.. Changes should be organized in one of several sections:

   - Added
   - Changed
   - Fixed
   - Deprecated
   - Removed

0.1.0 (September 9, 2020)
-------------------------

Initial release


