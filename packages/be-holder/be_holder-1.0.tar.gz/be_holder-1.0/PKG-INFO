Metadata-Version: 2.1
Name: be_holder
Version: 1.0
Summary: A python module for type checking function parameters and returns
Home-page: https://github.com/wassafshahzad/beholder
Author: Wassaf Shahzad
Author-email: wassafshahzad@gmail.com
License: MIT
Description: # Description:
        A python dectorater to enforce type checks on your python functions for your stupid colleagues who pass int type when you clearly told them to pass string.
        ヽ(ಠ_ಠ)ノ
        
        You can define parameter and return types for your python functions using type hints (check them out here : https://mypy.readthedocs.io/en/stable/cheat_sheet_py3.html) and the watcher decorator over them to handle the dirty work.
        
        Currently we only support positional arguments only and single return types but will add support for keyword arguments and mutiple return types.
        
        Raise and issue in the gitrepo if you find any bugs or need a feature.
        
        
        ## Types Checking Supported for
        > Positional Parameters
        > Single return types
        > User defined data types
        
        # Example
        
        ```python
        
        from be_holder import watcher
        
        
        @watcher
        def f():  # Will work as normal
            return "pass"
        
        @watcher
        def f1(a:str,b): #Will be typed checked and will raise TypeError if types do not match
            return "pass"
        @watcher
        def f2(a:str,b:int):
            return "pass":
        
        @watcher
        def f3()>str: #Will raise a type error due to return type not matching function definition
            return 1
        
        @watcher    
        def f4(a:str)->str:
            return "pass"
        
        if __name__ == "__main__":
            f4(1)
            f2("s",1)
            f2(1,1)
          
        ```
        
        
        
Platform: UNKNOWN
Description-Content-Type: text/markdown
