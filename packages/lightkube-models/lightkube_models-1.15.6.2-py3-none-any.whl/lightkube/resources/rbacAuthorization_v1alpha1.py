# autogenerated module
from typing import ClassVar

from ..core import resource as res
from ..models import rbac_v1alpha1 as m_rbac_v1alpha1


class ClusterRoleBinding(res.GlobalResource, m_rbac_v1alpha1.ClusterRoleBinding):
    api_info = res.ApiInfo(
        resource=res.ResourceDef('rbac.authorization.k8s.io', 'v1alpha1', 'ClusterRoleBinding'),
        plural='clusterrolebindings',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class ClusterRole(res.GlobalResource, m_rbac_v1alpha1.ClusterRole):
    api_info = res.ApiInfo(
        resource=res.ResourceDef('rbac.authorization.k8s.io', 'v1alpha1', 'ClusterRole'),
        plural='clusterroles',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class RoleBinding(res.NamespacedResourceG, m_rbac_v1alpha1.RoleBinding):
    api_info = res.ApiInfo(
        resource=res.ResourceDef('rbac.authorization.k8s.io', 'v1alpha1', 'RoleBinding'),
        plural='rolebindings',
        verbs=['delete', 'deletecollection', 'get', 'global_list', 'global_watch', 'list', 'patch', 'post', 'put', 'watch'],
    )


class Role(res.NamespacedResourceG, m_rbac_v1alpha1.Role):
    api_info = res.ApiInfo(
        resource=res.ResourceDef('rbac.authorization.k8s.io', 'v1alpha1', 'Role'),
        plural='roles',
        verbs=['delete', 'deletecollection', 'get', 'global_list', 'global_watch', 'list', 'patch', 'post', 'put', 'watch'],
    )

