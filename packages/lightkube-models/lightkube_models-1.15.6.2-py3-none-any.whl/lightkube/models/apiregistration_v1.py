# autogenerated module
from dataclasses import dataclass, field
from typing import List

from ..core.dataclasses_dict import DataclassDictMixIn

from . import meta_v1


@dataclass
class APIService(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'APIServiceSpec' = None
    status: 'APIServiceStatus' = None


@dataclass
class APIServiceCondition(DataclassDictMixIn):
    status: 'str'
    type: 'str'
    lastTransitionTime: 'meta_v1.Time' = None
    message: 'str' = None
    reason: 'str' = None


@dataclass
class APIServiceList(DataclassDictMixIn):
    items: 'List[APIService]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class APIServiceSpec(DataclassDictMixIn):
    groupPriorityMinimum: 'int'
    service: 'ServiceReference'
    versionPriority: 'int'
    caBundle: 'str' = None
    group: 'str' = None
    insecureSkipTLSVerify: 'bool' = None
    version: 'str' = None


@dataclass
class APIServiceStatus(DataclassDictMixIn):
    conditions: 'List[APIServiceCondition]' = None


@dataclass
class ServiceReference(DataclassDictMixIn):
    name: 'str' = None
    namespace: 'str' = None
    port: 'int' = None


