# autogenerated module
from dataclasses import dataclass, field
from typing import List

from ..core.dataclasses_dict import DataclassDictMixIn

from . import core_v1
from . import meta_v1
from . import runtime
from . import util_intstr


@dataclass
class ControllerRevision(DataclassDictMixIn):
    revision: 'int'
    apiVersion: 'str' = None
    data: 'runtime.RawExtension' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None


@dataclass
class ControllerRevisionList(DataclassDictMixIn):
    items: 'List[ControllerRevision]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class DaemonSet(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'DaemonSetSpec' = None
    status: 'DaemonSetStatus' = None


@dataclass
class DaemonSetCondition(DataclassDictMixIn):
    status: 'str'
    type: 'str'
    lastTransitionTime: 'meta_v1.Time' = None
    message: 'str' = None
    reason: 'str' = None


@dataclass
class DaemonSetList(DataclassDictMixIn):
    items: 'List[DaemonSet]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class DaemonSetSpec(DataclassDictMixIn):
    selector: 'meta_v1.LabelSelector'
    template: 'core_v1.PodTemplateSpec'
    minReadySeconds: 'int' = None
    revisionHistoryLimit: 'int' = None
    updateStrategy: 'DaemonSetUpdateStrategy' = None


@dataclass
class DaemonSetStatus(DataclassDictMixIn):
    currentNumberScheduled: 'int'
    desiredNumberScheduled: 'int'
    numberMisscheduled: 'int'
    numberReady: 'int'
    collisionCount: 'int' = None
    conditions: 'List[DaemonSetCondition]' = None
    numberAvailable: 'int' = None
    numberUnavailable: 'int' = None
    observedGeneration: 'int' = None
    updatedNumberScheduled: 'int' = None


@dataclass
class DaemonSetUpdateStrategy(DataclassDictMixIn):
    rollingUpdate: 'RollingUpdateDaemonSet' = None
    type: 'str' = None


@dataclass
class Deployment(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'DeploymentSpec' = None
    status: 'DeploymentStatus' = None


@dataclass
class DeploymentCondition(DataclassDictMixIn):
    status: 'str'
    type: 'str'
    lastTransitionTime: 'meta_v1.Time' = None
    lastUpdateTime: 'meta_v1.Time' = None
    message: 'str' = None
    reason: 'str' = None


@dataclass
class DeploymentList(DataclassDictMixIn):
    items: 'List[Deployment]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class DeploymentSpec(DataclassDictMixIn):
    selector: 'meta_v1.LabelSelector'
    template: 'core_v1.PodTemplateSpec'
    minReadySeconds: 'int' = None
    paused: 'bool' = None
    progressDeadlineSeconds: 'int' = None
    replicas: 'int' = None
    revisionHistoryLimit: 'int' = None
    strategy: 'DeploymentStrategy' = None


@dataclass
class DeploymentStatus(DataclassDictMixIn):
    availableReplicas: 'int' = None
    collisionCount: 'int' = None
    conditions: 'List[DeploymentCondition]' = None
    observedGeneration: 'int' = None
    readyReplicas: 'int' = None
    replicas: 'int' = None
    unavailableReplicas: 'int' = None
    updatedReplicas: 'int' = None


@dataclass
class DeploymentStrategy(DataclassDictMixIn):
    rollingUpdate: 'RollingUpdateDeployment' = None
    type: 'str' = None


@dataclass
class ReplicaSet(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'ReplicaSetSpec' = None
    status: 'ReplicaSetStatus' = None


@dataclass
class ReplicaSetCondition(DataclassDictMixIn):
    status: 'str'
    type: 'str'
    lastTransitionTime: 'meta_v1.Time' = None
    message: 'str' = None
    reason: 'str' = None


@dataclass
class ReplicaSetList(DataclassDictMixIn):
    items: 'List[ReplicaSet]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class ReplicaSetSpec(DataclassDictMixIn):
    selector: 'meta_v1.LabelSelector'
    minReadySeconds: 'int' = None
    replicas: 'int' = None
    template: 'core_v1.PodTemplateSpec' = None


@dataclass
class ReplicaSetStatus(DataclassDictMixIn):
    replicas: 'int'
    availableReplicas: 'int' = None
    conditions: 'List[ReplicaSetCondition]' = None
    fullyLabeledReplicas: 'int' = None
    observedGeneration: 'int' = None
    readyReplicas: 'int' = None


@dataclass
class RollingUpdateDaemonSet(DataclassDictMixIn):
    maxUnavailable: 'util_intstr.IntOrString' = None


@dataclass
class RollingUpdateDeployment(DataclassDictMixIn):
    maxSurge: 'util_intstr.IntOrString' = None
    maxUnavailable: 'util_intstr.IntOrString' = None


@dataclass
class RollingUpdateStatefulSetStrategy(DataclassDictMixIn):
    partition: 'int' = None


@dataclass
class Scale(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'ScaleSpec' = None
    status: 'ScaleStatus' = None


@dataclass
class ScaleSpec(DataclassDictMixIn):
    replicas: 'int' = None


@dataclass
class ScaleStatus(DataclassDictMixIn):
    replicas: 'int'
    selector: 'dict' = None
    targetSelector: 'str' = None


@dataclass
class StatefulSet(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'StatefulSetSpec' = None
    status: 'StatefulSetStatus' = None


@dataclass
class StatefulSetCondition(DataclassDictMixIn):
    status: 'str'
    type: 'str'
    lastTransitionTime: 'meta_v1.Time' = None
    message: 'str' = None
    reason: 'str' = None


@dataclass
class StatefulSetList(DataclassDictMixIn):
    items: 'List[StatefulSet]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class StatefulSetSpec(DataclassDictMixIn):
    selector: 'meta_v1.LabelSelector'
    serviceName: 'str'
    template: 'core_v1.PodTemplateSpec'
    podManagementPolicy: 'str' = None
    replicas: 'int' = None
    revisionHistoryLimit: 'int' = None
    updateStrategy: 'StatefulSetUpdateStrategy' = None
    volumeClaimTemplates: 'List[core_v1.PersistentVolumeClaim]' = None


@dataclass
class StatefulSetStatus(DataclassDictMixIn):
    replicas: 'int'
    collisionCount: 'int' = None
    conditions: 'List[StatefulSetCondition]' = None
    currentReplicas: 'int' = None
    currentRevision: 'str' = None
    observedGeneration: 'int' = None
    readyReplicas: 'int' = None
    updateRevision: 'str' = None
    updatedReplicas: 'int' = None


@dataclass
class StatefulSetUpdateStrategy(DataclassDictMixIn):
    rollingUpdate: 'RollingUpdateStatefulSetStrategy' = None
    type: 'str' = None


