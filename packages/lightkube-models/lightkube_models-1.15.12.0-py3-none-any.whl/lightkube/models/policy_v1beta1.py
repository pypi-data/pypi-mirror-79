# autogenerated module
from dataclasses import dataclass, field
from typing import List

from ..core.dataclasses_dict import DataclassDictMixIn

from . import core_v1
from . import meta_v1
from . import util_intstr


@dataclass
class AllowedCSIDriver(DataclassDictMixIn):
    name: 'str'


@dataclass
class AllowedFlexVolume(DataclassDictMixIn):
    driver: 'str'


@dataclass
class AllowedHostPath(DataclassDictMixIn):
    pathPrefix: 'str' = None
    readOnly: 'bool' = None


@dataclass
class Eviction(DataclassDictMixIn):
    apiVersion: 'str' = None
    deleteOptions: 'meta_v1.DeleteOptions' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None


@dataclass
class FSGroupStrategyOptions(DataclassDictMixIn):
    ranges: 'List[IDRange]' = None
    rule: 'str' = None


@dataclass
class HostPortRange(DataclassDictMixIn):
    max: 'int'
    min: 'int'


@dataclass
class IDRange(DataclassDictMixIn):
    max: 'int'
    min: 'int'


@dataclass
class PodDisruptionBudget(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'PodDisruptionBudgetSpec' = None
    status: 'PodDisruptionBudgetStatus' = None


@dataclass
class PodDisruptionBudgetList(DataclassDictMixIn):
    items: 'List[PodDisruptionBudget]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class PodDisruptionBudgetSpec(DataclassDictMixIn):
    maxUnavailable: 'util_intstr.IntOrString' = None
    minAvailable: 'util_intstr.IntOrString' = None
    selector: 'meta_v1.LabelSelector' = None


@dataclass
class PodDisruptionBudgetStatus(DataclassDictMixIn):
    currentHealthy: 'int'
    desiredHealthy: 'int'
    disruptionsAllowed: 'int'
    expectedPods: 'int'
    disruptedPods: 'dict' = None
    observedGeneration: 'int' = None


@dataclass
class PodSecurityPolicy(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'PodSecurityPolicySpec' = None


@dataclass
class PodSecurityPolicyList(DataclassDictMixIn):
    items: 'List[PodSecurityPolicy]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class PodSecurityPolicySpec(DataclassDictMixIn):
    fsGroup: 'FSGroupStrategyOptions'
    runAsUser: 'RunAsUserStrategyOptions'
    seLinux: 'SELinuxStrategyOptions'
    supplementalGroups: 'SupplementalGroupsStrategyOptions'
    allowPrivilegeEscalation: 'bool' = None
    allowedCSIDrivers: 'List[AllowedCSIDriver]' = None
    allowedCapabilities: 'List[str]' = None
    allowedFlexVolumes: 'List[AllowedFlexVolume]' = None
    allowedHostPaths: 'List[AllowedHostPath]' = None
    allowedProcMountTypes: 'List[str]' = None
    allowedUnsafeSysctls: 'List[str]' = None
    defaultAddCapabilities: 'List[str]' = None
    defaultAllowPrivilegeEscalation: 'bool' = None
    forbiddenSysctls: 'List[str]' = None
    hostIPC: 'bool' = None
    hostNetwork: 'bool' = None
    hostPID: 'bool' = None
    hostPorts: 'List[HostPortRange]' = None
    privileged: 'bool' = None
    readOnlyRootFilesystem: 'bool' = None
    requiredDropCapabilities: 'List[str]' = None
    runAsGroup: 'RunAsGroupStrategyOptions' = None
    runtimeClass: 'RuntimeClassStrategyOptions' = None
    volumes: 'List[str]' = None


@dataclass
class RunAsGroupStrategyOptions(DataclassDictMixIn):
    rule: 'str'
    ranges: 'List[IDRange]' = None


@dataclass
class RunAsUserStrategyOptions(DataclassDictMixIn):
    rule: 'str'
    ranges: 'List[IDRange]' = None


@dataclass
class RuntimeClassStrategyOptions(DataclassDictMixIn):
    allowedRuntimeClassNames: 'List[str]'
    defaultRuntimeClassName: 'str' = None


@dataclass
class SELinuxStrategyOptions(DataclassDictMixIn):
    rule: 'str'
    seLinuxOptions: 'core_v1.SELinuxOptions' = None


@dataclass
class SupplementalGroupsStrategyOptions(DataclassDictMixIn):
    ranges: 'List[IDRange]' = None
    rule: 'str' = None


