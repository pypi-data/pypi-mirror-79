# autogenerated module
from dataclasses import dataclass, field
from typing import List

from ..core.dataclasses_dict import DataclassDictMixIn

from . import resource
from . import meta_v1


@dataclass
class CrossVersionObjectReference(DataclassDictMixIn):
    kind: 'str'
    name: 'str'
    apiVersion: 'str' = None


@dataclass
class ExternalMetricSource(DataclassDictMixIn):
    metric: 'MetricIdentifier'
    target: 'MetricTarget'


@dataclass
class ExternalMetricStatus(DataclassDictMixIn):
    current: 'MetricValueStatus'
    metric: 'MetricIdentifier'


@dataclass
class HorizontalPodAutoscaler(DataclassDictMixIn):
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ObjectMeta' = None
    spec: 'HorizontalPodAutoscalerSpec' = None
    status: 'HorizontalPodAutoscalerStatus' = None


@dataclass
class HorizontalPodAutoscalerCondition(DataclassDictMixIn):
    status: 'str'
    type: 'str'
    lastTransitionTime: 'meta_v1.Time' = None
    message: 'str' = None
    reason: 'str' = None


@dataclass
class HorizontalPodAutoscalerList(DataclassDictMixIn):
    items: 'List[HorizontalPodAutoscaler]'
    apiVersion: 'str' = None
    kind: 'str' = None
    metadata: 'meta_v1.ListMeta' = None


@dataclass
class HorizontalPodAutoscalerSpec(DataclassDictMixIn):
    maxReplicas: 'int'
    scaleTargetRef: 'CrossVersionObjectReference'
    metrics: 'List[MetricSpec]' = None
    minReplicas: 'int' = None


@dataclass
class HorizontalPodAutoscalerStatus(DataclassDictMixIn):
    conditions: 'List[HorizontalPodAutoscalerCondition]'
    currentReplicas: 'int'
    desiredReplicas: 'int'
    currentMetrics: 'List[MetricStatus]' = None
    lastScaleTime: 'meta_v1.Time' = None
    observedGeneration: 'int' = None


@dataclass
class MetricIdentifier(DataclassDictMixIn):
    name: 'str'
    selector: 'meta_v1.LabelSelector' = None


@dataclass
class MetricSpec(DataclassDictMixIn):
    type: 'str'
    external: 'ExternalMetricSource' = None
    object: 'ObjectMetricSource' = None
    pods: 'PodsMetricSource' = None
    resource: 'ResourceMetricSource' = None


@dataclass
class MetricStatus(DataclassDictMixIn):
    type: 'str'
    external: 'ExternalMetricStatus' = None
    object: 'ObjectMetricStatus' = None
    pods: 'PodsMetricStatus' = None
    resource: 'ResourceMetricStatus' = None


@dataclass
class MetricTarget(DataclassDictMixIn):
    type: 'str'
    averageUtilization: 'int' = None
    averageValue: 'resource.Quantity' = None
    value: 'resource.Quantity' = None


@dataclass
class MetricValueStatus(DataclassDictMixIn):
    averageUtilization: 'int' = None
    averageValue: 'resource.Quantity' = None
    value: 'resource.Quantity' = None


@dataclass
class ObjectMetricSource(DataclassDictMixIn):
    describedObject: 'CrossVersionObjectReference'
    metric: 'MetricIdentifier'
    target: 'MetricTarget'


@dataclass
class ObjectMetricStatus(DataclassDictMixIn):
    current: 'MetricValueStatus'
    describedObject: 'CrossVersionObjectReference'
    metric: 'MetricIdentifier'


@dataclass
class PodsMetricSource(DataclassDictMixIn):
    metric: 'MetricIdentifier'
    target: 'MetricTarget'


@dataclass
class PodsMetricStatus(DataclassDictMixIn):
    current: 'MetricValueStatus'
    metric: 'MetricIdentifier'


@dataclass
class ResourceMetricSource(DataclassDictMixIn):
    name: 'str'
    target: 'MetricTarget'


@dataclass
class ResourceMetricStatus(DataclassDictMixIn):
    current: 'MetricValueStatus'
    name: 'str'


