# autogenerated module
from typing import ClassVar

from ..core import resource as res
from ..models import storage_v1beta1 as m_storage_v1beta1


class CSIDriver(res.GlobalResource, m_storage_v1beta1.CSIDriver):
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('storage.k8s.io', 'v1beta1', 'CSIDriver'),
        plural='csidrivers',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class CSINode(res.GlobalResource, m_storage_v1beta1.CSINode):
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('storage.k8s.io', 'v1beta1', 'CSINode'),
        plural='csinodes',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class StorageClass(res.GlobalResource, m_storage_v1beta1.StorageClass):
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('storage.k8s.io', 'v1beta1', 'StorageClass'),
        plural='storageclasses',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )


class VolumeAttachment(res.GlobalResource, m_storage_v1beta1.VolumeAttachment):
    _api_info = res.ApiInfo(
        resource=res.ResourceDef('storage.k8s.io', 'v1beta1', 'VolumeAttachment'),
        plural='volumeattachments',
        verbs=['delete', 'deletecollection', 'get', 'list', 'patch', 'post', 'put', 'watch'],
    )

