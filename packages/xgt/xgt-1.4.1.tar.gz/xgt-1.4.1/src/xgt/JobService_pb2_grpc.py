# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import JobService_pb2 as JobService__pb2


class JobServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ScheduleJobsCypher = channel.unary_unary(
        '/xgt.JobService/ScheduleJobsCypher',
        request_serializer=JobService__pb2.ScheduleJobsCypherRequest.SerializeToString,
        response_deserializer=JobService__pb2.ScheduleJobsCypherResponse.FromString,
        )
    self.CancelJobs = channel.unary_unary(
        '/xgt.JobService/CancelJobs',
        request_serializer=JobService__pb2.CancelJobsRequest.SerializeToString,
        response_deserializer=JobService__pb2.CancelJobsResponse.FromString,
        )
    self.GetJobs = channel.unary_stream(
        '/xgt.JobService/GetJobs',
        request_serializer=JobService__pb2.GetJobsRequest.SerializeToString,
        response_deserializer=JobService__pb2.GetJobsResponse.FromString,
        )
    self.WaitJobs = channel.unary_unary(
        '/xgt.JobService/WaitJobs',
        request_serializer=JobService__pb2.WaitJobsRequest.SerializeToString,
        response_deserializer=JobService__pb2.WaitJobsResponse.FromString,
        )


class JobServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ScheduleJobsCypher(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CancelJobs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetJobs(self, request, context):
    """Get status of one or more jobs.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def WaitJobs(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_JobServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ScheduleJobsCypher': grpc.unary_unary_rpc_method_handler(
          servicer.ScheduleJobsCypher,
          request_deserializer=JobService__pb2.ScheduleJobsCypherRequest.FromString,
          response_serializer=JobService__pb2.ScheduleJobsCypherResponse.SerializeToString,
      ),
      'CancelJobs': grpc.unary_unary_rpc_method_handler(
          servicer.CancelJobs,
          request_deserializer=JobService__pb2.CancelJobsRequest.FromString,
          response_serializer=JobService__pb2.CancelJobsResponse.SerializeToString,
      ),
      'GetJobs': grpc.unary_stream_rpc_method_handler(
          servicer.GetJobs,
          request_deserializer=JobService__pb2.GetJobsRequest.FromString,
          response_serializer=JobService__pb2.GetJobsResponse.SerializeToString,
      ),
      'WaitJobs': grpc.unary_unary_rpc_method_handler(
          servicer.WaitJobs,
          request_deserializer=JobService__pb2.WaitJobsRequest.FromString,
          response_serializer=JobService__pb2.WaitJobsResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'xgt.JobService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
